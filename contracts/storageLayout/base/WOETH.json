{
  "solcVersion": "0.8.7",
  "storage": [
    {
      "label": "_balances",
      "offset": 0,
      "slot": "0",
      "type": "t_mapping(t_address,t_uint256)",
      "contract": "ERC20",
      "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
    },
    {
      "label": "_allowances",
      "offset": 0,
      "slot": "1",
      "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
      "contract": "ERC20",
      "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
    },
    {
      "label": "_totalSupply",
      "offset": 0,
      "slot": "2",
      "type": "t_uint256",
      "contract": "ERC20",
      "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
    },
    {
      "label": "_name",
      "offset": 0,
      "slot": "3",
      "type": "t_string_storage",
      "contract": "ERC20",
      "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
    },
    {
      "label": "_symbol",
      "offset": 0,
      "slot": "4",
      "type": "t_string_storage",
      "contract": "ERC20",
      "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
    },
    {
      "label": "initialized",
      "offset": 0,
      "slot": "5",
      "type": "t_bool",
      "contract": "Initializable",
      "src": "contracts/utils/Initializable.sol:12"
    },
    {
      "label": "initializing",
      "offset": 1,
      "slot": "5",
      "type": "t_bool",
      "contract": "Initializable",
      "src": "contracts/utils/Initializable.sol:17"
    },
    {
      "label": "______gap",
      "offset": 0,
      "slot": "6",
      "type": "t_array(t_uint256)50_storage",
      "contract": "Initializable",
      "src": "contracts/utils/Initializable.sol:41"
    }
  ],
  "types": {
    "t_address": {
      "label": "address",
      "numberOfBytes": "20"
    },
    "t_array(t_uint256)50_storage": {
      "label": "uint256[50]",
      "numberOfBytes": "1600"
    },
    "t_bool": {
      "label": "bool",
      "numberOfBytes": "1"
    },
    "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
      "label": "mapping(address => mapping(address => uint256))",
      "numberOfBytes": "32"
    },
    "t_mapping(t_address,t_uint256)": {
      "label": "mapping(address => uint256)",
      "numberOfBytes": "32"
    },
    "t_string_storage": {
      "label": "string",
      "numberOfBytes": "32"
    },
    "t_uint256": {
      "label": "uint256",
      "numberOfBytes": "32"
    }
  }
}