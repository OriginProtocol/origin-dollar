{
  "storage": [
    {
      "contract": "Initializable",
      "label": "initialized",
      "type": "t_bool",
      "src": "contracts/utils/Initializable.sol:8"
    },
    {
      "contract": "Initializable",
      "label": "initializing",
      "type": "t_bool",
      "src": "contracts/utils/Initializable.sol:13"
    },
    {
      "contract": "Initializable",
      "label": "______gap",
      "type": "t_array(t_uint256)50_storage",
      "src": "contracts/utils/Initializable.sol:37"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "platformAddress",
      "type": "t_address",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:27"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "vaultAddress",
      "type": "t_address",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:29"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "assetToPToken",
      "type": "t_mapping(t_address,t_address)",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:32"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "assetsMapped",
      "type": "t_array(t_address)dyn_storage",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:35"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "rewardTokenAddress",
      "type": "t_address",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:38"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "rewardLiquidationThreshold",
      "type": "t_uint256",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:39"
    },
    {
      "contract": "InitializableAbstractStrategy",
      "label": "_reserved",
      "type": "t_array(t_int256)100_storage",
      "src": "contracts/utils/InitializableAbstractStrategy.sol:42"
    }
  ],
  "types": {
    "t_address": {
      "label": "address"
    },
    "t_mapping(t_address,t_address)": {
      "label": "mapping(address => address)"
    },
    "t_array(t_address)dyn_storage": {
      "label": "address[]"
    },
    "t_uint256": {
      "label": "uint256"
    },
    "t_array(t_int256)100_storage": {
      "label": "int256[100]"
    },
    "t_int256": {
      "label": "int256"
    },
    "t_bool": {
      "label": "bool"
    },
    "t_array(t_uint256)50_storage": {
      "label": "uint256[50]"
    }
  }
}