@startuml

skinparam tabSize 2

title "OETH Oracle Contract Dependencies"

object "OETHVault" as vault <<Origin>> #DeepSkyBlue {
assets:
    \tWETH
    \tfrxETH
    \trETH
    \tstETH
}

object "OETHOracleRouter" as router <<Origin>> #DeepSkyBlue {
pairs:
    \tWETH/ETH
    \tfrxETH/ETH
    \tstETH/ETH
    \trETH/ETH
}

object "OETHOracleUpdater" as oou <<Origin>> #DeepSkyBlue {
pair: OETH/ETH
}

object "OETHOracle" as oetho <<Origin>> #DeepSkyBlue {
pair: OETH/ETH
}

' object "frxETHOracleUpdater" as fou <<Origin>> #DeepSkyBlue {
' pair: frxETH/ETH
' }

' object "frxETHOracle" as frxo <<Origin>> #DeepSkyBlue {
' pair: frxETH/ETH
' }

object "External\nAccess\nControlled\nAggregator" as clrETH <<Chainlink>> {
pair: rETH/ETH
}

object "External\nAccess\nControlled\nAggregator" as clstETH <<Chainlink>> {
pair: stETH/ETH
}

object "FrxEthFraxOracle" as fefo <<Frax>> {
pair: frxETH/ETH
}

object "OETH/ETH Pool" as coep <<Curve>> {
assets: OETH, ETH
}

' object "frxETH/OETH Pool" as cfop <<Curve>> {
' assets: frxETH, OETH
' }

' object "frxETH/ETH Pool" as cfep <<Curve>> {
' assets: frxETH, ETH
' }

' object "frxETH/WETH Pool" as cfwp <<Curve>> {
' assets: frxETH, WETH
' }

' object "OETH/ETH Pool" as boep <<Balancer>> {
' assets: OETH, ETH
' }


vault ..> router : price(asset)
router ..> clrETH : latestRoundData()
router ..> clstETH : latestRoundData()
router ..> fefo : latestRoundData()

vault <.. oou : price()
oetho <.. oou  : addPrice()
oou ..> coep : price_oracle()
' oou ...> cfop : price_oracle()
' oou ...> boep : price_oracle()

' router ..> frxo  : latestRoundData()
' fou ..> frxo : addPrice()
' fou ...> cfep : price_oracle()
' fou ...> cfwp : price_oracle()


' object "FrxEthFraxOracle" as fo <<Frax>> {
' pair: frxETH/ETH
' }

' object "FrxEthEthDualOracle" as fdo <<Frax>> {
' pair: frxETH/ETH
' }


' object "External\nAccess\nControlled\nAggregator" as cleth <<Chainlink>> {
' pair: ETH/USD
' }

' object "External\nAccess\nControlled\nAggregator" as clfrax <<Chainlink>> {
' pair: FRAX/USD
' }

' object "StaticOracle" as uso <<Uniswap>> {
' }

' object "frxETH/FRAX Pool" as up <<Uniswap>> {
'     assets: frxETH, FRAX
' }

' router ..> fo : latestRoundData()
' fdo .> fo : addRoundData()
' fdo ....> cfep : price_oracle()
' fdo ....> uso : quoteSpecificPoolsWithTimePeriod()
' uso .> up : observe()
' fdo ..> cleth : latestRoundData()
' fdo ..> clfrax : latestRoundData()

@enduml