@startuml

!$originColor = DeepSkyBlue
!$phase2 = Yellow
' !$originColor = WhiteSmoke
!$newColor = LightGreen
!$changedColor = Orange
!$thirdPartyColor = WhiteSmoke

legend
blue - Origin
green - new
' orange - changed
' yellow - phase2
white - 3rd Party
end legend

title "Sonic Contract Dependencies"

object "OSonicZapper" as zap <<Origin>> #$originColor {
    assets: S, wS
}

object "WOSonic" as wos <<Origin>><<Proxy>> #$originColor {
    asset: OS
    symbol: wOS
    name: Wrapped Origin Sonic
}

object "OSonicDripper" as drip <<Origin>><<Proxy>> #$originColor {
    asset: wS
}

object "VaultValueChecker" as checker <<Origin>> #$originColor {
}

object "OSonic" as os <<Origin>><<Proxy>> #$originColor {
    symbol: OS
    name: Origin Sonic
}

object "OSonicVault" as vault <<Origin>><<Proxy>> #$originColor {
    asset: wS
}

object "OSonicHarvester" as harv <<Origin>><<Proxy>> #$newColor {
    rewards: CRV
}

' Oracle
object "OSonicOracleRouter" as router <<Origin>> #DeepSkyBlue {
}

object "SonicStakingStrategy" as stakeStrat <<Origin>><<Proxy>> #$originColor {
    asset: wS
}

object "Special Fee Contract" as sfc <<Sonic>><<Proxy>> {
    asset: S
}

object "Curve AMO Strategy" as curveAmoStrat <<Origin>><<Proxy>> #$newColor {
    asset: wS
    reward: CRV
}

object "Curve OS/wS\nPool" as curvePool <<Curve>> {
    assets: OS, wS
    lp: OSwS
}

object "Curve OS/wS\nGauge" as curveGauge <<Curve>> {
    asset: OSwS
    lp: OSwS-gauge
}


wos <. zap
zap ..> os
zap ..> vault

checker ..> vault

wos ..> os
os <.> vault
vault <.> drip
vault <...> stakeStrat
stakeStrat ..> sfc
vault <...> curveAmoStrat
vault .> router

vault <.. harv 
drip <.. harv 

harv <..> curveAmoStrat
curveAmoStrat ..> curvePool
curveAmoStrat ..> curveGauge


@enduml