{
  "address": "0xcD0fcF8a31Bc78ec07752e9CCD3960E936D18366",
  "abi": [
    {
      "inputs": [],
      "name": "SWAP_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_assets",
          "type": "address[]"
        }
      ],
      "name": "approveAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fromAssetAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minToAssetAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "toAssetAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb3b5e13a39b0362e194ae23e041f08281e94eb6534a7baa6d922fde0978ddec8",
  "receipt": {
    "to": null,
    "from": "0xFD9E6005187F448957a0972a7d0C0A6dA2911236",
    "contractAddress": "0xcD0fcF8a31Bc78ec07752e9CCD3960E936D18366",
    "transactionIndex": 25,
    "gasUsed": "902378",
    "logsBloom": "0x
    "blockHash": "0x5852880685ebdfff495a76765e9892d1d2a9787cb6bdb39a2b2b19b93718cc25",
    "transactionHash": "0xb3b5e13a39b0362e194ae23e041f08281e94eb6534a7baa6d922fde0978ddec8",
    "logs": [],
    "blockNumber": 17392415,
    "cumulativeGasUsed": "4561179",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "5f84276316dac9ef7adb55812616a542",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"}],\"name\":\"approveAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minToAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toAssetAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swap(address,address,uint256,uint256,bytes)\":{\"params\":{\"_data\":\"RLP encoded executer address and bytes data. This is re-encoded tx.data from 1Inch swap API\",\"_fromAsset\":\"The token address of the asset being sold by the vault.\",\"_fromAssetAmount\":\"The amount of assets being sold by the vault.\",\"_minToAssetAmount\":\"The minimum amount of assets to be purchased.\",\"_toAsset\":\"The token address of the asset being purchased by the vault.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"SWAP_ROUTER()\":{\"notice\":\"1Inch router contract to give allowance to perform swaps\"},\"swap(address,address,uint256,uint256,bytes)\":{\"notice\":\"Strategist swaps assets sitting in the contract of the `assetHolder`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapper/Swapper1InchV5.sol\":\"Swapper1InchV5\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"contracts/interfaces/IOneInch.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// 1Inch swap data\\nstruct SwapDescription {\\n    IERC20 srcToken; // contract address of a token to sell\\n    IERC20 dstToken; // contract address of a token to buy\\n    address payable srcReceiver;\\n    address payable dstReceiver; // Receiver of destination currency. default: fromAddress\\n    uint256 amount;\\n    uint256 minReturnAmount;\\n    uint256 flags;\\n}\\n\\n/// @title Interface for making arbitrary calls during swap\\ninterface IAggregationExecutor {\\n    /// @notice propagates information about original msg.sender and executes arbitrary data\\n    function execute(address msgSender) external payable; // 0x4b64e492\\n}\\n\\ninterface IOneInchRouter {\\n    /// @notice Performs a swap, delegating all calls encoded in `data` to `executor`.\\n    function swap(\\n        IAggregationExecutor executor,\\n        SwapDescription calldata desc,\\n        bytes calldata permit,\\n        bytes calldata data\\n    ) external returns (uint256 returnAmount, uint256 spentAmount);\\n\\n    /// @notice Performs swap using Uniswap exchange. Wraps and unwraps ETH if required.\\n    function unoswapTo(\\n        address payable recipient,\\n        IERC20 srcToken,\\n        uint256 amount,\\n        uint256 minReturn,\\n        uint256[] calldata pools\\n    ) external payable returns (uint256 returnAmount);\\n\\n    /// @notice Performs swap using Uniswap V3 exchange. Wraps and unwraps ETH if required.\\n    function uniswapV3SwapTo(\\n        address payable recipient,\\n        uint256 amount,\\n        uint256 minReturn,\\n        uint256[] calldata pools\\n    ) external payable returns (uint256 returnAmount);\\n}\\n\",\"keccak256\":\"0x4f55210ef79f09ea85908aed26b79e91eb2d6c5c31cc35d8bd4a2d58fc66586e\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapper.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface ISwapper {\\n    /**\\n     * @param fromAsset The token address of the asset being sold.\\n     * @param toAsset The token address of the asset being purchased.\\n     * @param fromAssetAmount The amount of assets being sold.\\n     * @param minToAssetAmmount The minimum amount of assets to be purchased.\\n     * @param data tx.data returned from 1Inch's /v5.0/1/swap API\\n     */\\n    function swap(\\n        address fromAsset,\\n        address toAsset,\\n        uint256 fromAssetAmount,\\n        uint256 minToAssetAmmount,\\n        bytes calldata data\\n    ) external returns (uint256 toAssetAmount);\\n}\\n\",\"keccak256\":\"0xf6452c70d5dbfde99e6e82cd6b49d8cbec8efb48da77e28603bea981b8b0759e\"},\"contracts/swapper/Swapper1InchV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice 1Inch Pathfinder V5 implementation of the general ISwapper interface.\\n * @author Origin Protocol Inc\\n */\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport { IAggregationExecutor, IOneInchRouter, SwapDescription } from \\\"../interfaces/IOneInch.sol\\\";\\nimport { ISwapper } from \\\"../interfaces/ISwapper.sol\\\";\\n\\ncontract Swapper1InchV5 is ISwapper {\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice 1Inch router contract to give allowance to perform swaps\\n    address public constant SWAP_ROUTER =\\n        0x1111111254EEB25477B68fb85Ed929f73A960582;\\n\\n    // swap(address,(address,address,address,address,uint256,uint256,uint256),bytes,bytes)\\n    bytes4 internal constant SWAP_SELECTOR = 0x12aa3caf;\\n    // unoswapTo(address,address,uint256,uint256,uint256[])\\n    bytes4 internal constant UNISWAP_SELECTOR = 0xf78dc253;\\n    // uniswapV3SwapTo(address,uint256,uint256,uint256[])\\n    bytes4 internal constant UNISWAPV3_SELECTOR = 0xbc80f1a8;\\n\\n    /**\\n     * @notice Strategist swaps assets sitting in the contract of the `assetHolder`.\\n     * @param _fromAsset The token address of the asset being sold by the vault.\\n     * @param _toAsset The token address of the asset being purchased by the vault.\\n     * @param _fromAssetAmount The amount of assets being sold by the vault.\\n     * @param _minToAssetAmount The minimum amount of assets to be purchased.\\n     * @param _data RLP encoded executer address and bytes data. This is re-encoded tx.data from 1Inch swap API\\n     */\\n    function swap(\\n        address _fromAsset,\\n        address _toAsset,\\n        uint256 _fromAssetAmount,\\n        uint256 _minToAssetAmount,\\n        bytes calldata _data\\n    ) external override returns (uint256 toAssetAmount) {\\n        require(\\n            IERC20(_fromAsset).balanceOf(address(this)) >= _fromAssetAmount,\\n            \\\"Insufficient balance\\\"\\n        );\\n        require(\\n            IERC20(_fromAsset).allowance(address(this), SWAP_ROUTER) >=\\n                _fromAssetAmount,\\n            \\\"Insufficient allowance\\\"\\n        );\\n\\n        // Decode the function selector from the RLP encoded _data param\\n        bytes4 swapSelector = bytes4(_data[:4]);\\n\\n        if (swapSelector == SWAP_SELECTOR) {\\n            // Decode the executer address and data from the RLP encoded _data param\\n            (, address executer, bytes memory executerData) = abi.decode(\\n                _data,\\n                (bytes4, address, bytes)\\n            );\\n            SwapDescription memory swapDesc = SwapDescription({\\n                srcToken: IERC20(_fromAsset),\\n                dstToken: IERC20(_toAsset),\\n                srcReceiver: payable(executer),\\n                dstReceiver: payable(msg.sender),\\n                amount: _fromAssetAmount,\\n                minReturnAmount: _minToAssetAmount,\\n                flags: 4 // _REQUIRES_EXTRA_ETH is second bit. _PARTIAL_FILL is first bit\\n            });\\n            (toAssetAmount, ) = IOneInchRouter(SWAP_ROUTER).swap(\\n                IAggregationExecutor(executer),\\n                swapDesc,\\n                hex\\\"\\\",\\n                executerData\\n            );\\n        } else if (swapSelector == UNISWAP_SELECTOR) {\\n            // Need to get the Uniswap pools data from the _data param\\n            (, uint256[] memory pools) = abi.decode(_data, (bytes4, uint256[]));\\n            toAssetAmount = IOneInchRouter(SWAP_ROUTER).unoswapTo(\\n                payable(msg.sender),\\n                IERC20(_fromAsset),\\n                _fromAssetAmount,\\n                _minToAssetAmount,\\n                pools\\n            );\\n        } else if (swapSelector == UNISWAPV3_SELECTOR) {\\n            // Need to get the Uniswap pools data from the _data param\\n            // slither-disable-next-line uninitialized-storage\\n            (, uint256[] memory pools) = abi.decode(_data, (bytes4, uint256[]));\\n            toAssetAmount = IOneInchRouter(SWAP_ROUTER).uniswapV3SwapTo(\\n                payable(msg.sender),\\n                _fromAssetAmount,\\n                _minToAssetAmount,\\n                pools\\n            );\\n        } else {\\n            revert(\\\"Unsupported swap function\\\");\\n        }\\n    }\\n\\n    function approveAssets(address[] memory _assets) external {\\n        for (uint256 i = 0; i < _assets.length; ++i) {\\n            IERC20(_assets[i]).safeApprove(SWAP_ROUTER, type(uint256).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1eee6fd4d19bf867d4fe05b1640bace91036faa9707c408755f01516106f5209\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610f5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632506c018146100465780633b6b0e1d1461006c578063c600589314610081575b600080fd5b610059610054366004610938565b6100b4565b6040519081526020015b60405180910390f35b61007f61007a3660046109e2565b610517565b005b61009c731111111254eeb25477b68fb85ed929f73a96058281565b6040516001600160a01b039091168152602001610063565b6040516370a0823160e01b815230600482015260009085906001600160a01b038916906370a082319060240160206040518083038186803b1580156100f857600080fd5b505afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610c0d565b101561017a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b604051636eb1769f60e11b8152306004820152731111111254eeb25477b68fb85ed929f73a960582602482015285906001600160a01b0389169063dd62ed3e9060440160206040518083038186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610c0d565b10156102545760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610171565b60006102636004828587610e2f565b61026c91610e59565b90506001600160e01b031981166312aa3caf60e01b14156103985760008061029685870187610aaa565b925092505060006040518060e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001846001600160a01b03168152602001336001600160a01b031681526020018a815260200189815260200160048152509050731111111254eeb25477b68fb85ed929f73a9605826001600160a01b03166312aa3caf8483856040518463ffffffff1660e01b815260040161033b93929190610d3e565b6040805180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610c26565b50945061050c92505050565b6001600160e01b0319811663f78dc25360e01b141561045c5760006103bf84860186610b62565b60405163f78dc25360e01b8152909250731111111254eeb25477b68fb85ed929f73a960582915063f78dc253906104029033908d908c908c908890600401610ccd565b602060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610c0d565b92505061050c565b6001600160e01b031981166317901e3560e31b14156104c457600061048384860186610b62565b6040516317901e3560e31b8152909250731111111254eeb25477b68fb85ed929f73a960582915063bc80f1a8906104029033908b908b908790600401610d07565b60405162461bcd60e51b815260206004820152601960248201527f556e737570706f7274656420737761702066756e6374696f6e000000000000006044820152606401610171565b509695505050505050565b60005b815181101561058057610570731111111254eeb25477b68fb85ed929f73a96058260001984848151811061055057610550610ee2565b60200260200101516001600160a01b03166105849092919063ffffffff16565b61057981610eb9565b905061051a565b5050565b80158061060d5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190610c0d565b155b6106785760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610171565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526106ca9084906106cf565b505050565b6000610724826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107a19092919063ffffffff16565b8051909150156106ca57808060200190518101906107429190610a88565b6106ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610171565b60606107b084846000856107ba565b90505b9392505050565b60608247101561081b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610171565b843b6108695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610171565b600080866001600160a01b031685876040516108859190610cb1565b60006040518083038185875af1925050503d80600081146108c2576040519150601f19603f3d011682016040523d82523d6000602084013e6108c7565b606091505b50915091506108d78282866108e2565b979650505050505050565b606083156108f15750816107b3565b8251156109015782518084602001fd5b8160405162461bcd60e51b81526004016101719190610dc7565b80356001600160e01b03198116811461093357600080fd5b919050565b60008060008060008060a0878903121561095157600080fd5b863561095c81610f0e565b9550602087013561096c81610f0e565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561099757600080fd5b818901915089601f8301126109ab57600080fd5b8135818111156109ba57600080fd5b8a60208285010111156109cc57600080fd5b6020830194508093505050509295509295509295565b600060208083850312156109f557600080fd5b823567ffffffffffffffff811115610a0c57600080fd5b8301601f81018513610a1d57600080fd5b8035610a30610a2b82610e0b565b610dda565b80828252848201915084840188868560051b8701011115610a5057600080fd5b600094505b83851015610a7c578035610a6881610f0e565b835260019490940193918501918501610a55565b50979650505050505050565b600060208284031215610a9a57600080fd5b815180151581146107b357600080fd5b600080600060608486031215610abf57600080fd5b610ac88461091b565b9250602080850135610ad981610f0e565b9250604085013567ffffffffffffffff80821115610af657600080fd5b818701915087601f830112610b0a57600080fd5b813581811115610b1c57610b1c610ef8565b610b2e601f8201601f19168501610dda565b91508082528884828501011115610b4457600080fd5b80848401858401376000848284010152508093505050509250925092565b60008060408385031215610b7557600080fd5b610b7e8361091b565b915060208084013567ffffffffffffffff811115610b9b57600080fd5b8401601f81018613610bac57600080fd5b8035610bba610a2b82610e0b565b80828252848201915084840189868560051b8701011115610bda57600080fd5b600094505b83851015610bfd578035835260019490940193918501918501610bdf565b5080955050505050509250929050565b600060208284031215610c1f57600080fd5b5051919050565b60008060408385031215610c3957600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b83811015610c7a57815187529582019590820190600101610c5e565b509495945050505050565b60008151808452610c9d816020860160208601610e89565b601f01601f19169290920160200192915050565b60008251610cc3818460208701610e89565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906108d790830184610c4a565b60018060a01b0385168152836020820152826040820152608060608201526000610d346080830184610c4a565b9695505050505050565b600061014060018060a01b03808716845280865116602085015280602087015116604085015280604087015116606085015280606087015116608085015250608085015160a084015260a085015160c084015260c085015160e084015280610100840152610db28184016000815260200190565b9050828103610120840152610d348185610c85565b6020815260006107b36020830184610c85565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0357610e03610ef8565b604052919050565b600067ffffffffffffffff821115610e2557610e25610ef8565b5060051b60200190565b60008085851115610e3f57600080fd5b83861115610e4c57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610e815780818660040360031b1b83161692505b505092915050565b60005b83811015610ea4578181015183820152602001610e8c565b83811115610eb3576000848401525b50505050565b6000600019821415610edb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f2357600080fd5b5056fea264697066735822122095b9e54f84024de18180156be3fd725fe6fb08d0a770a4b862e31355f6e49a3f64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632506c018146100465780633b6b0e1d1461006c578063c600589314610081575b600080fd5b610059610054366004610938565b6100b4565b6040519081526020015b60405180910390f35b61007f61007a3660046109e2565b610517565b005b61009c731111111254eeb25477b68fb85ed929f73a96058281565b6040516001600160a01b039091168152602001610063565b6040516370a0823160e01b815230600482015260009085906001600160a01b038916906370a082319060240160206040518083038186803b1580156100f857600080fd5b505afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610c0d565b101561017a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b604051636eb1769f60e11b8152306004820152731111111254eeb25477b68fb85ed929f73a960582602482015285906001600160a01b0389169063dd62ed3e9060440160206040518083038186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610c0d565b10156102545760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610171565b60006102636004828587610e2f565b61026c91610e59565b90506001600160e01b031981166312aa3caf60e01b14156103985760008061029685870187610aaa565b925092505060006040518060e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001846001600160a01b03168152602001336001600160a01b031681526020018a815260200189815260200160048152509050731111111254eeb25477b68fb85ed929f73a9605826001600160a01b03166312aa3caf8483856040518463ffffffff1660e01b815260040161033b93929190610d3e565b6040805180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610c26565b50945061050c92505050565b6001600160e01b0319811663f78dc25360e01b141561045c5760006103bf84860186610b62565b60405163f78dc25360e01b8152909250731111111254eeb25477b68fb85ed929f73a960582915063f78dc253906104029033908d908c908c908890600401610ccd565b602060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610c0d565b92505061050c565b6001600160e01b031981166317901e3560e31b14156104c457600061048384860186610b62565b6040516317901e3560e31b8152909250731111111254eeb25477b68fb85ed929f73a960582915063bc80f1a8906104029033908b908b908790600401610d07565b60405162461bcd60e51b815260206004820152601960248201527f556e737570706f7274656420737761702066756e6374696f6e000000000000006044820152606401610171565b509695505050505050565b60005b815181101561058057610570731111111254eeb25477b68fb85ed929f73a96058260001984848151811061055057610550610ee2565b60200260200101516001600160a01b03166105849092919063ffffffff16565b61057981610eb9565b905061051a565b5050565b80158061060d5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190610c0d565b155b6106785760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610171565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526106ca9084906106cf565b505050565b6000610724826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107a19092919063ffffffff16565b8051909150156106ca57808060200190518101906107429190610a88565b6106ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610171565b60606107b084846000856107ba565b90505b9392505050565b60608247101561081b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610171565b843b6108695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610171565b600080866001600160a01b031685876040516108859190610cb1565b60006040518083038185875af1925050503d80600081146108c2576040519150601f19603f3d011682016040523d82523d6000602084013e6108c7565b606091505b50915091506108d78282866108e2565b979650505050505050565b606083156108f15750816107b3565b8251156109015782518084602001fd5b8160405162461bcd60e51b81526004016101719190610dc7565b80356001600160e01b03198116811461093357600080fd5b919050565b60008060008060008060a0878903121561095157600080fd5b863561095c81610f0e565b9550602087013561096c81610f0e565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561099757600080fd5b818901915089601f8301126109ab57600080fd5b8135818111156109ba57600080fd5b8a60208285010111156109cc57600080fd5b6020830194508093505050509295509295509295565b600060208083850312156109f557600080fd5b823567ffffffffffffffff811115610a0c57600080fd5b8301601f81018513610a1d57600080fd5b8035610a30610a2b82610e0b565b610dda565b80828252848201915084840188868560051b8701011115610a5057600080fd5b600094505b83851015610a7c578035610a6881610f0e565b835260019490940193918501918501610a55565b50979650505050505050565b600060208284031215610a9a57600080fd5b815180151581146107b357600080fd5b600080600060608486031215610abf57600080fd5b610ac88461091b565b9250602080850135610ad981610f0e565b9250604085013567ffffffffffffffff80821115610af657600080fd5b818701915087601f830112610b0a57600080fd5b813581811115610b1c57610b1c610ef8565b610b2e601f8201601f19168501610dda565b91508082528884828501011115610b4457600080fd5b80848401858401376000848284010152508093505050509250925092565b60008060408385031215610b7557600080fd5b610b7e8361091b565b915060208084013567ffffffffffffffff811115610b9b57600080fd5b8401601f81018613610bac57600080fd5b8035610bba610a2b82610e0b565b80828252848201915084840189868560051b8701011115610bda57600080fd5b600094505b83851015610bfd578035835260019490940193918501918501610bdf565b5080955050505050509250929050565b600060208284031215610c1f57600080fd5b5051919050565b60008060408385031215610c3957600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b83811015610c7a57815187529582019590820190600101610c5e565b509495945050505050565b60008151808452610c9d816020860160208601610e89565b601f01601f19169290920160200192915050565b60008251610cc3818460208701610e89565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906108d790830184610c4a565b60018060a01b0385168152836020820152826040820152608060608201526000610d346080830184610c4a565b9695505050505050565b600061014060018060a01b03808716845280865116602085015280602087015116604085015280604087015116606085015280606087015116608085015250608085015160a084015260a085015160c084015260c085015160e084015280610100840152610db28184016000815260200190565b9050828103610120840152610d348185610c85565b6020815260006107b36020830184610c85565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0357610e03610ef8565b604052919050565b600067ffffffffffffffff821115610e2557610e25610ef8565b5060051b60200190565b60008085851115610e3f57600080fd5b83861115610e4c57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610e815780818660040360031b1b83161692505b505092915050565b60005b83811015610ea4578181015183820152602001610e8c565b83811115610eb3576000848401525b50505050565b6000600019821415610edb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f2357600080fd5b5056fea264697066735822122095b9e54f84024de18180156be3fd725fe6fb08d0a770a4b862e31355f6e49a3f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "swap(address,address,uint256,uint256,bytes)": {
        "params": {
          "_data": "RLP encoded executer address and bytes data. This is re-encoded tx.data from 1Inch swap API",
          "_fromAsset": "The token address of the asset being sold by the vault.",
          "_fromAssetAmount": "The amount of assets being sold by the vault.",
          "_minToAssetAmount": "The minimum amount of assets to be purchased.",
          "_toAsset": "The token address of the asset being purchased by the vault."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "SWAP_ROUTER()": {
        "notice": "1Inch router contract to give allowance to perform swaps"
      },
      "swap(address,address,uint256,uint256,bytes)": {
        "notice": "Strategist swaps assets sitting in the contract of the `assetHolder`."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}