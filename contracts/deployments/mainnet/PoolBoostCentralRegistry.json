{
  "address": "0x65d6977Da199143BfA467A100614e5cbf59711a6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "FactoryApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "FactoryRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernorshipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousGovernor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernorshipTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolBoosterAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ammPoolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IPoolBoostCentralRegistry.PoolBoosterType",
          "name": "poolBoosterType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "PoolBoosterCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolBoosterAddress",
          "type": "address"
        }
      ],
      "name": "PoolBoosterRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factoryAddress",
          "type": "address"
        }
      ],
      "name": "approveFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolBoosterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ammPoolAddress",
          "type": "address"
        },
        {
          "internalType": "enum IPoolBoostCentralRegistry.PoolBoosterType",
          "name": "_boosterType",
          "type": "uint8"
        }
      ],
      "name": "emitPoolBoosterCreated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolBoosterAddress",
          "type": "address"
        }
      ],
      "name": "emitPoolBoosterRemoved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "factories",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllFactories",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factoryAddress",
          "type": "address"
        }
      ],
      "name": "isApprovedFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isGovernor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factoryAddress",
          "type": "address"
        }
      ],
      "name": "removeFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGovernor",
          "type": "address"
        }
      ],
      "name": "transferGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x42264952b5b91304f910415b9c1c688a762e3f43ec683db36a6024dd45fa0faf",
  "receipt": {
    "to": null,
    "from": "0xDba474FeF81bc7475f70e28DFC12410f032A83Db",
    "contractAddress": "0x65d6977Da199143BfA467A100614e5cbf59711a6",
    "transactionIndex": 18,
    "gasUsed": "681282",
    "logsBloom": "0x
    "blockHash": "0xf8a3e7d6495c9633daf4ad36e2253997f4c745c0c046b99aeae6b0fadaa61f33",
    "transactionHash": "0x42264952b5b91304f910415b9c1c688a762e3f43ec683db36a6024dd45fa0faf",
    "logs": [
      {
        "transactionIndex": 18,
        "blockNumber": 23490275,
        "transactionHash": "0x42264952b5b91304f910415b9c1c688a762e3f43ec683db36a6024dd45fa0faf",
        "address": "0x65d6977Da199143BfA467A100614e5cbf59711a6",
        "topics": [
          "0xc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 193,
        "blockHash": "0xf8a3e7d6495c9633daf4ad36e2253997f4c745c0c046b99aeae6b0fadaa61f33"
      }
    ],
    "blockNumber": 23490275,
    "cumulativeGasUsed": "5557012",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5615adc00107e532b1893058f61d1303",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"FactoryApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"FactoryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernorshipTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolBoosterAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ammPoolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IPoolBoostCentralRegistry.PoolBoosterType\",\"name\":\"poolBoosterType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"PoolBoosterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolBoosterAddress\",\"type\":\"address\"}],\"name\":\"PoolBoosterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"}],\"name\":\"approveFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolBoosterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ammPoolAddress\",\"type\":\"address\"},{\"internalType\":\"enum IPoolBoostCentralRegistry.PoolBoosterType\",\"name\":\"_boosterType\",\"type\":\"uint8\"}],\"name\":\"emitPoolBoosterCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolBoosterAddress\",\"type\":\"address\"}],\"name\":\"emitPoolBoosterRemoved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"factories\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFactories\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"}],\"name\":\"isApprovedFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"}],\"name\":\"removeFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Origin Protocol Inc\",\"kind\":\"dev\",\"methods\":{\"approveFactory(address)\":{\"params\":{\"_factoryAddress\":\"address of the factory\"}},\"emitPoolBoosterCreated(address,address,uint8)\":{\"details\":\"This has been created as a convenience method for the monitoring to have         an index of all of the created pool boosters by only listening to the         events of this contract.\",\"params\":{\"_ammPoolAddress\":\"address of the AMM pool forwarding yield to the pool booster\",\"_boosterType\":\"PoolBoosterType the type of the pool booster\",\"_poolBoosterAddress\":\"address of the pool booster created\"}},\"emitPoolBoosterRemoved(address)\":{\"details\":\"This has been created as a convenience method for the monitoring to have         an index of all of the removed pool boosters by only listening to the         events of this contract.\",\"params\":{\"_poolBoosterAddress\":\"address of the pool booster to be removed\"}},\"isApprovedFactory(address)\":{\"params\":{\"_factoryAddress\":\"address of the factory\"}},\"removeFactory(address)\":{\"params\":{\"_factoryAddress\":\"address of the factory\"}},\"transferGovernance(address)\":{\"params\":{\"_newGovernor\":\"Address of the new Governor\"}}},\"title\":\"Contract that holds all governance approved pool booster Factory        implementation deployments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveFactory(address)\":{\"notice\":\"Adds a factory address to the approved factory addresses\"},\"claimGovernance()\":{\"notice\":\"Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor.\"},\"emitPoolBoosterCreated(address,address,uint8)\":{\"notice\":\"Emits a pool booster created event\"},\"emitPoolBoosterRemoved(address)\":{\"notice\":\"Emits a pool booster removed event\"},\"getAllFactories()\":{\"notice\":\"Returns all supported factories\"},\"governor()\":{\"notice\":\"Returns the address of the current Governor.\"},\"isApprovedFactory(address)\":{\"notice\":\"Returns true if the factory is approved\"},\"isGovernor()\":{\"notice\":\"Returns true if the caller is the current Governor.\"},\"removeFactory(address)\":{\"notice\":\"Removes the factory from approved factory addresses\"},\"transferGovernance(address)\":{\"notice\":\"Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/poolBooster/PoolBoostCentralRegistry.sol\":\"PoolBoostCentralRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance/Governable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Base for contracts that are managed by the Origin Protocol's Governor.\\n * @dev Copy of the openzeppelin Ownable.sol contract with nomenclature change\\n *      from owner to governor and renounce methods removed. Does not use\\n *      Context.sol like Ownable.sol does for simplification.\\n * @author Origin Protocol Inc\\n */\\nabstract contract Governable {\\n    // Storage position of the owner and pendingOwner of the contract\\n    // keccak256(\\\"OUSD.governor\\\");\\n    bytes32 private constant governorPosition =\\n        0x7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a;\\n\\n    // keccak256(\\\"OUSD.pending.governor\\\");\\n    bytes32 private constant pendingGovernorPosition =\\n        0x44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db;\\n\\n    // keccak256(\\\"OUSD.reentry.status\\\");\\n    bytes32 private constant reentryStatusPosition =\\n        0x53bf423e48ed90e97d02ab0ebab13b2a235a6bfbe9c321847d5c175333ac4535;\\n\\n    // See OpenZeppelin ReentrancyGuard implementation\\n    uint256 constant _NOT_ENTERED = 1;\\n    uint256 constant _ENTERED = 2;\\n\\n    event PendingGovernorshipTransfer(\\n        address indexed previousGovernor,\\n        address indexed newGovernor\\n    );\\n\\n    event GovernorshipTransferred(\\n        address indexed previousGovernor,\\n        address indexed newGovernor\\n    );\\n\\n    /**\\n     * @notice Returns the address of the current Governor.\\n     */\\n    function governor() public view returns (address) {\\n        return _governor();\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current Governor.\\n     */\\n    function _governor() internal view returns (address governorOut) {\\n        bytes32 position = governorPosition;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            governorOut := sload(position)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address of the pending Governor.\\n     */\\n    function _pendingGovernor()\\n        internal\\n        view\\n        returns (address pendingGovernor)\\n    {\\n        bytes32 position = pendingGovernorPosition;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            pendingGovernor := sload(position)\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the Governor.\\n     */\\n    modifier onlyGovernor() {\\n        require(isGovernor(), \\\"Caller is not the Governor\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Returns true if the caller is the current Governor.\\n     */\\n    function isGovernor() public view returns (bool) {\\n        return msg.sender == _governor();\\n    }\\n\\n    function _setGovernor(address newGovernor) internal {\\n        emit GovernorshipTransferred(_governor(), newGovernor);\\n\\n        bytes32 position = governorPosition;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(position, newGovernor)\\n        }\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        bytes32 position = reentryStatusPosition;\\n        uint256 _reentry_status;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            _reentry_status := sload(position)\\n        }\\n\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_reentry_status != _ENTERED, \\\"Reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(position, _ENTERED)\\n        }\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(position, _NOT_ENTERED)\\n        }\\n    }\\n\\n    function _setPendingGovernor(address newGovernor) internal {\\n        bytes32 position = pendingGovernorPosition;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            sstore(position, newGovernor)\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfers Governance of the contract to a new account (`newGovernor`).\\n     * Can only be called by the current Governor. Must be claimed for this to complete\\n     * @param _newGovernor Address of the new Governor\\n     */\\n    function transferGovernance(address _newGovernor) external onlyGovernor {\\n        _setPendingGovernor(_newGovernor);\\n        emit PendingGovernorshipTransfer(_governor(), _newGovernor);\\n    }\\n\\n    /**\\n     * @notice Claim Governance of the contract to a new account (`newGovernor`).\\n     * Can only be called by the new Governor.\\n     */\\n    function claimGovernance() external {\\n        require(\\n            msg.sender == _pendingGovernor(),\\n            \\\"Only the pending Governor can complete the claim\\\"\\n        );\\n        _changeGovernor(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Change Governance of the contract to a new account (`newGovernor`).\\n     * @param _newGovernor Address of the new Governor\\n     */\\n    function _changeGovernor(address _newGovernor) internal {\\n        require(_newGovernor != address(0), \\\"New Governor is address(0)\\\");\\n        _setGovernor(_newGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0xf32f873c8bfbacf2e5f01d0cf37bc7f54fbd5aa656e95c8a599114229946f107\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/poolBooster/IPoolBoostCentralRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IPoolBoostCentralRegistry {\\n    /**\\n     * @dev all the supported pool booster types are listed here. It is possible\\n     *      to have multiple versions of the factory that supports the same type of\\n     *      pool booster. Factories are immutable and this can happen when a factory\\n     *      or related pool booster required code update.\\n     *      e.g. \\\"PoolBoosterSwapxDouble\\\" & \\\"PoolBoosterSwapxDouble_v2\\\"\\n     */\\n    enum PoolBoosterType {\\n        // Supports bribing 2 contracts per pool. Appropriate for Ichi vault concentrated\\n        // liquidity pools where (which is expected in most/all cases) both pool gauges\\n        // require bribing.\\n        SwapXDoubleBooster,\\n        // Supports bribing a single contract per pool. Appropriate for Classic Stable &\\n        // Classic Volatile pools and Ichi vaults where only 1 side (1 of the 2 gauges)\\n        // needs bribing\\n        SwapXSingleBooster,\\n        // Supports bribing a single contract per pool. Appropriate for Metropolis pools\\n        MetropolisBooster,\\n        // Supports creating a Merkl campaign.\\n        MerklBooster\\n    }\\n\\n    struct PoolBoosterEntry {\\n        address boosterAddress;\\n        address ammPoolAddress;\\n        PoolBoosterType boosterType;\\n    }\\n\\n    event PoolBoosterCreated(\\n        address poolBoosterAddress,\\n        address ammPoolAddress,\\n        PoolBoosterType poolBoosterType,\\n        address factoryAddress\\n    );\\n    event PoolBoosterRemoved(address poolBoosterAddress);\\n\\n    function emitPoolBoosterCreated(\\n        address _poolBoosterAddress,\\n        address _ammPoolAddress,\\n        PoolBoosterType _boosterType\\n    ) external;\\n\\n    function emitPoolBoosterRemoved(address _poolBoosterAddress) external;\\n}\\n\",\"keccak256\":\"0xa217e46abc623abfb0b7924f86e5eca07c0a5b64a91a345b1f9fd4bb97d4d0cf\",\"license\":\"BUSL-1.1\"},\"contracts/poolBooster/PoolBoostCentralRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport { Governable } from \\\"../governance/Governable.sol\\\";\\nimport { IPoolBoostCentralRegistry } from \\\"../interfaces/poolBooster/IPoolBoostCentralRegistry.sol\\\";\\n\\n/**\\n * @title Contract that holds all governance approved pool booster Factory\\n *        implementation deployments\\n * @author Origin Protocol Inc\\n */\\ncontract PoolBoostCentralRegistry is Governable, IPoolBoostCentralRegistry {\\n    event FactoryApproved(address factoryAddress);\\n    event FactoryRemoved(address factoryAddress);\\n\\n    // @notice List of approved factories\\n    address[] public factories;\\n\\n    modifier onlyApprovedFactories() {\\n        require(isApprovedFactory(msg.sender), \\\"Not an approved factory\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        // set the governor of the implementation contract to zero address\\n        _setGovernor(address(0));\\n    }\\n\\n    /**\\n     * @notice Adds a factory address to the approved factory addresses\\n     * @param _factoryAddress address of the factory\\n     */\\n    function approveFactory(address _factoryAddress) external onlyGovernor {\\n        require(_factoryAddress != address(0), \\\"Invalid address\\\");\\n        require(\\n            !isApprovedFactory(_factoryAddress),\\n            \\\"Factory already approved\\\"\\n        );\\n\\n        factories.push(_factoryAddress);\\n        emit FactoryApproved(_factoryAddress);\\n    }\\n\\n    /**\\n     * @notice Removes the factory from approved factory addresses\\n     * @param _factoryAddress address of the factory\\n     */\\n    function removeFactory(address _factoryAddress) external onlyGovernor {\\n        require(_factoryAddress != address(0), \\\"Invalid address\\\");\\n\\n        uint256 length = factories.length;\\n        bool factoryRemoved = false;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (factories[i] != _factoryAddress) {\\n                continue;\\n            }\\n\\n            factories[i] = factories[length - 1];\\n            factories.pop();\\n            emit FactoryRemoved(_factoryAddress);\\n            factoryRemoved = true;\\n            break;\\n        }\\n        require(factoryRemoved, \\\"Not an approved factory\\\");\\n\\n        emit FactoryRemoved(_factoryAddress);\\n    }\\n\\n    /**\\n     * @notice Emits a pool booster created event\\n     * @dev    This has been created as a convenience method for the monitoring to have\\n     *         an index of all of the created pool boosters by only listening to the\\n     *         events of this contract.\\n     * @param _poolBoosterAddress address of the pool booster created\\n     * @param _ammPoolAddress address of the AMM pool forwarding yield to the pool booster\\n     * @param _boosterType PoolBoosterType the type of the pool booster\\n     */\\n    function emitPoolBoosterCreated(\\n        address _poolBoosterAddress,\\n        address _ammPoolAddress,\\n        PoolBoosterType _boosterType\\n    ) external onlyApprovedFactories {\\n        emit PoolBoosterCreated(\\n            _poolBoosterAddress,\\n            _ammPoolAddress,\\n            _boosterType,\\n            msg.sender // address of the factory\\n        );\\n    }\\n\\n    /**\\n     * @notice Emits a pool booster removed event\\n     * @dev    This has been created as a convenience method for the monitoring to have\\n     *         an index of all of the removed pool boosters by only listening to the\\n     *         events of this contract.\\n     * @param _poolBoosterAddress address of the pool booster to be removed\\n     */\\n    function emitPoolBoosterRemoved(address _poolBoosterAddress)\\n        external\\n        onlyApprovedFactories\\n    {\\n        emit PoolBoosterRemoved(_poolBoosterAddress);\\n    }\\n\\n    /**\\n     * @notice Returns true if the factory is approved\\n     * @param _factoryAddress address of the factory\\n     */\\n    function isApprovedFactory(address _factoryAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        uint256 length = factories.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (factories[i] == _factoryAddress) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @notice Returns all supported factories\\n     */\\n    function getAllFactories() external view returns (address[] memory) {\\n        return factories;\\n    }\\n}\\n\",\"keccak256\":\"0x6a5b35a71a37b6df526d3272237d3196ac0ce377764450d7be711256694fa283\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060186000601c565b6082565b6001600160a01b038116603b600080516020610bd18339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a3600080516020610bd183398151915255565b610b40806100916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635d36b190116100715780635d36b19014610131578063672383c414610139578063a07505981461014c578063adda33c514610161578063c7af335214610174578063d38bfff41461017c57600080fd5b806307025229146100ae5780630c340a24146100c357806326cf3739146100e85780634b37c73f1461010b578063591290e81461011e575b600080fd5b6100c16100bc366004610901565b61018f565b005b6100cb6101fd565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fb6100f6366004610901565b61021a565b60405190151581526020016100df565b6100c1610119366004610901565b61027b565b6100c161012c366004610923565b61047e565b6100c16104d8565b6100cb61014736600461096e565b61057e565b6101546105a8565b6040516100df9190610987565b6100c161016f366004610901565b61060a565b6100fb610747565b6100c161018a366004610901565b610778565b6101983361021a565b6101bd5760405162461bcd60e51b81526004016101b4906109d3565b60405180910390fd5b6040516001600160a01b03821681527fa6267ed4a9ecad83a4813a850e7214f9a7fdf6995314c1c5efa359123d99b67b906020015b60405180910390a150565b6000610215600080516020610aeb8339815191525490565b905090565b60008054815b8181101561027157836001600160a01b03166000828154811061024557610245610a0a565b6000918252602090912001546001600160a01b031603610269575060019392505050565b600101610220565b5060009392505050565b610283610747565b61029f5760405162461bcd60e51b81526004016101b490610a20565b6001600160a01b0381166102e75760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016101b4565b6000805490805b8281101561041e57836001600160a01b03166000828154811061031357610313610a0a565b6000918252602090912001546001600160a01b03160361041657600061033a600185610a57565b8154811061034a5761034a610a0a565b600091825260208220015481546001600160a01b0390911691908390811061037457610374610a0a565b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091558054806103ac576103ac610a7e565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03861681527fafa2737b2090fa39c66b7348625f0c03726240f724defbc6216d679506f94441910160405180910390a16001915061041e565b6001016102ee565b508061043c5760405162461bcd60e51b81526004016101b4906109d3565b6040516001600160a01b03841681527fafa2737b2090fa39c66b7348625f0c03726240f724defbc6216d679506f94441906020015b60405180910390a1505050565b6104873361021a565b6104a35760405162461bcd60e51b81526004016101b4906109d3565b7f815a468ae1c240cd4e701cd11d7b89454db9d1c3e96c3ddda0b075e7612d5d68838383336040516104719493929190610a94565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146105735760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084016101b4565b61057c3361081c565b565b6000818154811061058e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600080548060200260200160405190810160405280929190818152602001828054801561060057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e2575b5050505050905090565b610612610747565b61062e5760405162461bcd60e51b81526004016101b490610a20565b6001600160a01b0381166106765760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016101b4565b61067f8161021a565b156106cc5760405162461bcd60e51b815260206004820152601860248201527f466163746f727920616c726561647920617070726f766564000000000000000060448201526064016101b4565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383169081179091556040519081527f4378f1462a48772813c3eb384aaee78cca44eb9a24b228a0118c8f4a8e5e3fd5906020016101f2565b600061075f600080516020610aeb8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b610780610747565b61079c5760405162461bcd60e51b81526004016101b490610a20565b6107c4817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b03166107e4600080516020610aeb8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166108725760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f72206973206164647265737328302900000000000060448201526064016101b4565b61087b8161087e565b50565b806001600160a01b031661089e600080516020610aeb8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a3600080516020610aeb83398151915255565b80356001600160a01b03811681146108fc57600080fd5b919050565b60006020828403121561091357600080fd5b61091c826108e5565b9392505050565b60008060006060848603121561093857600080fd5b610941846108e5565b925061094f602085016108e5565b915060408401356004811061096357600080fd5b809150509250925092565b60006020828403121561098057600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b818110156109c85783516001600160a01b03168352602093840193909201916001016109a1565b509095945050505050565b60208082526017908201527f4e6f7420616e20617070726f76656420666163746f7279000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604082015260600190565b81810381811115610a7857634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b038581168252841660208201526080810160048410610aca57634e487b7160e01b600052602160045260246000fd5b60408201939093526001600160a01b03919091166060909101529291505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220af91f6cee8e3e995189ed4e165ec2ce1025b2abe78e5572e7c1c64e69021584764736f6c634300081c00337bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80635d36b190116100715780635d36b19014610131578063672383c414610139578063a07505981461014c578063adda33c514610161578063c7af335214610174578063d38bfff41461017c57600080fd5b806307025229146100ae5780630c340a24146100c357806326cf3739146100e85780634b37c73f1461010b578063591290e81461011e575b600080fd5b6100c16100bc366004610901565b61018f565b005b6100cb6101fd565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fb6100f6366004610901565b61021a565b60405190151581526020016100df565b6100c1610119366004610901565b61027b565b6100c161012c366004610923565b61047e565b6100c16104d8565b6100cb61014736600461096e565b61057e565b6101546105a8565b6040516100df9190610987565b6100c161016f366004610901565b61060a565b6100fb610747565b6100c161018a366004610901565b610778565b6101983361021a565b6101bd5760405162461bcd60e51b81526004016101b4906109d3565b60405180910390fd5b6040516001600160a01b03821681527fa6267ed4a9ecad83a4813a850e7214f9a7fdf6995314c1c5efa359123d99b67b906020015b60405180910390a150565b6000610215600080516020610aeb8339815191525490565b905090565b60008054815b8181101561027157836001600160a01b03166000828154811061024557610245610a0a565b6000918252602090912001546001600160a01b031603610269575060019392505050565b600101610220565b5060009392505050565b610283610747565b61029f5760405162461bcd60e51b81526004016101b490610a20565b6001600160a01b0381166102e75760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016101b4565b6000805490805b8281101561041e57836001600160a01b03166000828154811061031357610313610a0a565b6000918252602090912001546001600160a01b03160361041657600061033a600185610a57565b8154811061034a5761034a610a0a565b600091825260208220015481546001600160a01b0390911691908390811061037457610374610a0a565b6000918252602082200180546001600160a01b0319166001600160a01b0393909316929092179091558054806103ac576103ac610a7e565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03861681527fafa2737b2090fa39c66b7348625f0c03726240f724defbc6216d679506f94441910160405180910390a16001915061041e565b6001016102ee565b508061043c5760405162461bcd60e51b81526004016101b4906109d3565b6040516001600160a01b03841681527fafa2737b2090fa39c66b7348625f0c03726240f724defbc6216d679506f94441906020015b60405180910390a1505050565b6104873361021a565b6104a35760405162461bcd60e51b81526004016101b4906109d3565b7f815a468ae1c240cd4e701cd11d7b89454db9d1c3e96c3ddda0b075e7612d5d68838383336040516104719493929190610a94565b7f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db546001600160a01b0316336001600160a01b0316146105735760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652070656e64696e6720476f7665726e6f722063616e20636f60448201526f6d706c6574652074686520636c61696d60801b60648201526084016101b4565b61057c3361081c565b565b6000818154811061058e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600080548060200260200160405190810160405280929190818152602001828054801561060057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e2575b5050505050905090565b610612610747565b61062e5760405162461bcd60e51b81526004016101b490610a20565b6001600160a01b0381166106765760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016101b4565b61067f8161021a565b156106cc5760405162461bcd60e51b815260206004820152601860248201527f466163746f727920616c726561647920617070726f766564000000000000000060448201526064016101b4565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b0383169081179091556040519081527f4378f1462a48772813c3eb384aaee78cca44eb9a24b228a0118c8f4a8e5e3fd5906020016101f2565b600061075f600080516020610aeb8339815191525490565b6001600160a01b0316336001600160a01b031614905090565b610780610747565b61079c5760405162461bcd60e51b81526004016101b490610a20565b6107c4817f44c4d30b2eaad5130ad70c3ba6972730566f3e6359ab83e800d905c61b1c51db55565b806001600160a01b03166107e4600080516020610aeb8339815191525490565b6001600160a01b03167fa39cc5eb22d0f34d8beaefee8a3f17cc229c1a1d1ef87a5ad47313487b1c4f0d60405160405180910390a350565b6001600160a01b0381166108725760405162461bcd60e51b815260206004820152601a60248201527f4e657720476f7665726e6f72206973206164647265737328302900000000000060448201526064016101b4565b61087b8161087e565b50565b806001600160a01b031661089e600080516020610aeb8339815191525490565b6001600160a01b03167fc7c0c772add429241571afb3805861fb3cfa2af374534088b76cdb4325a87e9a60405160405180910390a3600080516020610aeb83398151915255565b80356001600160a01b03811681146108fc57600080fd5b919050565b60006020828403121561091357600080fd5b61091c826108e5565b9392505050565b60008060006060848603121561093857600080fd5b610941846108e5565b925061094f602085016108e5565b915060408401356004811061096357600080fd5b809150509250925092565b60006020828403121561098057600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b818110156109c85783516001600160a01b03168352602093840193909201916001016109a1565b509095945050505050565b60208082526017908201527f4e6f7420616e20617070726f76656420666163746f7279000000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601a908201527f43616c6c6572206973206e6f742074686520476f7665726e6f72000000000000604082015260600190565b81810381811115610a7857634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b038581168252841660208201526080810160048410610aca57634e487b7160e01b600052602160045260246000fd5b60408201939093526001600160a01b03919091166060909101529291505056fe7bea13895fa79d2831e0a9e28edede30099005a50d652d8957cf8a607ee6ca4aa2646970667358221220af91f6cee8e3e995189ed4e165ec2ce1025b2abe78e5572e7c1c64e69021584764736f6c634300081c0033",
  "libraries": {},
  "devdoc": {
    "author": "Origin Protocol Inc",
    "kind": "dev",
    "methods": {
      "approveFactory(address)": {
        "params": {
          "_factoryAddress": "address of the factory"
        }
      },
      "emitPoolBoosterCreated(address,address,uint8)": {
        "details": "This has been created as a convenience method for the monitoring to have         an index of all of the created pool boosters by only listening to the         events of this contract.",
        "params": {
          "_ammPoolAddress": "address of the AMM pool forwarding yield to the pool booster",
          "_boosterType": "PoolBoosterType the type of the pool booster",
          "_poolBoosterAddress": "address of the pool booster created"
        }
      },
      "emitPoolBoosterRemoved(address)": {
        "details": "This has been created as a convenience method for the monitoring to have         an index of all of the removed pool boosters by only listening to the         events of this contract.",
        "params": {
          "_poolBoosterAddress": "address of the pool booster to be removed"
        }
      },
      "isApprovedFactory(address)": {
        "params": {
          "_factoryAddress": "address of the factory"
        }
      },
      "removeFactory(address)": {
        "params": {
          "_factoryAddress": "address of the factory"
        }
      },
      "transferGovernance(address)": {
        "params": {
          "_newGovernor": "Address of the new Governor"
        }
      }
    },
    "title": "Contract that holds all governance approved pool booster Factory        implementation deployments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveFactory(address)": {
        "notice": "Adds a factory address to the approved factory addresses"
      },
      "claimGovernance()": {
        "notice": "Claim Governance of the contract to a new account (`newGovernor`). Can only be called by the new Governor."
      },
      "emitPoolBoosterCreated(address,address,uint8)": {
        "notice": "Emits a pool booster created event"
      },
      "emitPoolBoosterRemoved(address)": {
        "notice": "Emits a pool booster removed event"
      },
      "getAllFactories()": {
        "notice": "Returns all supported factories"
      },
      "governor()": {
        "notice": "Returns the address of the current Governor."
      },
      "isApprovedFactory(address)": {
        "notice": "Returns true if the factory is approved"
      },
      "isGovernor()": {
        "notice": "Returns true if the caller is the current Governor."
      },
      "removeFactory(address)": {
        "notice": "Removes the factory from approved factory addresses"
      },
      "transferGovernance(address)": {
        "notice": "Transfers Governance of the contract to a new account (`newGovernor`). Can only be called by the current Governor. Must be claimed for this to complete"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 38273,
        "contract": "contracts/poolBooster/PoolBoostCentralRegistry.sol:PoolBoostCentralRegistry",
        "label": "factories",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}