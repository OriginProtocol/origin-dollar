{
  "address": "0xa7695eED05094E28AA575CB0cCa3CF17848a7981",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x762f38bd3fa06d6e1678cce4cd215cc9a01187f2e51dcda9a393d17c779b83d4",
  "receipt": {
    "to": null,
    "from": "0x71F78361537A6f7B6818e7A760c8bC0146D93f50",
    "contractAddress": "0xa7695eED05094E28AA575CB0cCa3CF17848a7981",
    "transactionIndex": 38,
    "gasUsed": "433633",
    "logsBloom": "0x
    "blockHash": "0x7f50c8c7c06551ae636074f9ac6b6f76f0d78e04ba93c22dc5e4e5ee0ae3fc01",
    "transactionHash": "0x762f38bd3fa06d6e1678cce4cd215cc9a01187f2e51dcda9a393d17c779b83d4",
    "logs": [],
    "blockNumber": 13369286,
    "cumulativeGasUsed": "3602620",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b6193023c3a28756304ff066bec0ae10",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"price(address)\":{\"params\":{\"asset\":\"address of the asset\"},\"returns\":{\"_0\":\"uint256 USD price of 1 of the asset, in 8 decimal fixed\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"price(address)\":{\"notice\":\"Returns the total price in 8 digit USD for a given asset.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/OracleRouter.sol\":\"OracleRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBasicToken.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IBasicToken {\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xcabd808c03076fa6fb5838a13210b2b99314d23842e0e3d5e55e0c1466e75212\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /**\\n     * @dev returns the asset price in USD, 8 decimal digits.\\n     */\\n    function price(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x595ee808ea4eb2e36362c0e46e85e4f923e673a6eb17fe7efad1c8d77d41d09d\",\"license\":\"agpl-3.0\"},\"contracts/interfaces/chainlink/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x6194c60f3343140b13e867d59b1b00d042dc4149cb5a18f03b3d7cb3adb7127e\",\"license\":\"agpl-3.0\"},\"contracts/oracle/OracleRouter.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/chainlink/AggregatorV3Interface.sol\\\";\\nimport { IOracle } from \\\"../interfaces/IOracle.sol\\\";\\nimport { Helpers } from \\\"../utils/Helpers.sol\\\";\\n\\nabstract contract OracleRouterBase is IOracle {\\n    uint256 constant MIN_DRIFT = uint256(70000000);\\n    uint256 constant MAX_DRIFT = uint256(130000000);\\n\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     * @return address address of the price feed for the asset\\n     */\\n    function feed(address asset) internal view virtual returns (address);\\n\\n    /**\\n     * @notice Returns the total price in 8 digit USD for a given asset.\\n     * @param asset address of the asset\\n     * @return uint256 USD price of 1 of the asset, in 8 decimal fixed\\n     */\\n    function price(address asset) external view override returns (uint256) {\\n        address _feed = feed(asset);\\n        require(_feed != address(0), \\\"Asset not available\\\");\\n        (, int256 _iprice, , , ) = AggregatorV3Interface(_feed)\\n            .latestRoundData();\\n        uint256 _price = uint256(_iprice);\\n        if (isStablecoin(asset)) {\\n            require(_price <= MAX_DRIFT, \\\"Oracle: Price exceeds max\\\");\\n            require(_price >= MIN_DRIFT, \\\"Oracle: Price under min\\\");\\n        }\\n        return uint256(_price);\\n    }\\n\\n    function isStablecoin(address _asset) internal view returns (bool) {\\n        string memory symbol = Helpers.getSymbol(_asset);\\n        bytes32 symbolHash = keccak256(abi.encodePacked(symbol));\\n        return\\n            symbolHash == keccak256(abi.encodePacked(\\\"DAI\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDC\\\")) ||\\n            symbolHash == keccak256(abi.encodePacked(\\\"USDT\\\"));\\n    }\\n}\\n\\ncontract OracleRouter is OracleRouterBase {\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     */\\n    function feed(address asset) internal pure override returns (address) {\\n        if (asset == address(0x6B175474E89094C44Da98b954EedeAC495271d0F)) {\\n            // Chainlink: DAI/USD\\n            return address(0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9);\\n        } else if (\\n            asset == address(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48)\\n        ) {\\n            // Chainlink: USDC/USD\\n            return address(0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6);\\n        } else if (\\n            asset == address(0xdAC17F958D2ee523a2206206994597C13D831ec7)\\n        ) {\\n            // Chainlink: USDT/USD\\n            return address(0x3E7d1eAB13ad0104d2750B8863b489D65364e32D);\\n        } else if (\\n            asset == address(0xc00e94Cb662C3520282E6f5717214004A7f26888)\\n        ) {\\n            // Chainlink: COMP/USD\\n            return address(0xdbd020CAeF83eFd542f4De03e3cF0C28A4428bd5);\\n        } else if (\\n            asset == address(0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9)\\n        ) {\\n            // Chainlink: AAVE/USD\\n            return address(0x547a514d5e3769680Ce22B2361c10Ea13619e8a9);\\n        } else if (\\n            asset == address(0xD533a949740bb3306d119CC777fa900bA034cd52)\\n        ) {\\n            // Chainlink: CRV/USD\\n            return address(0xCd627aA160A6fA45Eb793D19Ef54f5062F20f33f);\\n        } else {\\n            revert(\\\"Asset not available\\\");\\n        }\\n    }\\n}\\n\\ncontract OracleRouterDev is OracleRouterBase {\\n    mapping(address => address) public assetToFeed;\\n\\n    function setFeed(address _asset, address _feed) external {\\n        assetToFeed[_asset] = _feed;\\n    }\\n\\n    /**\\n     * @dev The price feed contract to use for a particular asset.\\n     * @param asset address of the asset\\n     */\\n    function feed(address asset) internal view override returns (address) {\\n        return assetToFeed[asset];\\n    }\\n}\\n\",\"keccak256\":\"0x6fe67b623428b5caf0669482f4e894be6d16ba2d492154e7d2fc75b94451a51e\",\"license\":\"agpl-3.0\"},\"contracts/utils/Helpers.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport { IBasicToken } from \\\"../interfaces/IBasicToken.sol\\\";\\n\\nlibrary Helpers {\\n    /**\\n     * @notice Fetch the `symbol()` from an ERC20 token\\n     * @dev Grabs the `symbol()` from a contract\\n     * @param _token Address of the ERC20 token\\n     * @return string Symbol of the ERC20 token\\n     */\\n    function getSymbol(address _token) internal view returns (string memory) {\\n        string memory symbol = IBasicToken(_token).symbol();\\n        return symbol;\\n    }\\n\\n    /**\\n     * @notice Fetch the `decimals()` from an ERC20 token\\n     * @dev Grabs the `decimals()` from a contract and fails if\\n     *      the decimal value does not live within a certain range\\n     * @param _token Address of the ERC20 token\\n     * @return uint256 Decimals of the ERC20 token\\n     */\\n    function getDecimals(address _token) internal view returns (uint256) {\\n        uint256 decimals = IBasicToken(_token).decimals();\\n        require(\\n            decimals >= 4 && decimals <= 18,\\n            \\\"Token must have sufficient decimal places\\\"\\n        );\\n\\n        return decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x7ce41c7eacd2b6722029bd87759fe6e4d9b48a862277707737be82c94581b855\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aea9107814610030575b600080fd5b61004361003e366004610524565b610055565b60405190815260200160405180910390f35b600080610061836101f0565b90506001600160a01b0381166100b45760405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012791906105fa565b505050915050600081905061013b856103b5565b156101e8576307bfa4808111156101945760405162461bcd60e51b815260206004820152601960248201527f4f7261636c653a2050726963652065786365656473206d61780000000000000060448201526064016100ab565b63042c1d808110156101e85760405162461bcd60e51b815260206004820152601760248201527f4f7261636c653a20507269636520756e646572206d696e00000000000000000060448201526064016100ab565b949350505050565b60006001600160a01b038216736b175474e89094c44da98b954eedeac495271d0f1415610232575073aed0c38402a5d19df6e4c03f4e2dced6e29c1ee9919050565b6001600160a01b03821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814156102725750738fffffd4afb6115b954bd326cbe7b4ba576818f6919050565b6001600160a01b03821673dac17f958d2ee523a2206206994597c13d831ec714156102b25750733e7d1eab13ad0104d2750b8863b489d65364e32d919050565b6001600160a01b03821673c00e94cb662c3520282e6f5717214004a7f2688814156102f2575073dbd020caef83efd542f4de03e3cf0c28a4428bd5919050565b6001600160a01b038216737fc66500c84a76ad7e9c93437bfc5ac33e2ddae91415610332575073547a514d5e3769680ce22b2361c10ea13619e8a9919050565b6001600160a01b03821673d533a949740bb3306d119cc777fa900ba034cd521415610372575073cd627aa160a6fa45eb793d19ef54f5062f20f33f919050565b60405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064016100ab565b919050565b6000806103c18361048a565b90506000816040516020016103d6919061064a565b604051602081830303815290604052805190602001209050604051602001610407906244414960e81b815260030190565b604051602081830303815290604052805190602001208114806104515750604051635553444360e01b60208201526024016040516020818303038152906040528051906020012081145b806101e85750604051631554d11560e21b6020820152602401604051602081830303815290604052805190602001208114949350505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156104c757600080fd5b505afa1580156104db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610503919081019061054d565b9392505050565b805169ffffffffffffffffffff811681146103b057600080fd5b60006020828403121561053657600080fd5b81356001600160a01b038116811461050357600080fd5b60006020828403121561055f57600080fd5b815167ffffffffffffffff8082111561057757600080fd5b818401915084601f83011261058b57600080fd5b81518181111561059d5761059d610696565b604051601f8201601f19908116603f011681019083821181831017156105c5576105c5610696565b816040528281528760208487010111156105de57600080fd5b6105ef836020830160208801610666565b979650505050505050565b600080600080600060a0868803121561061257600080fd5b61061b8661050a565b945060208601519350604086015192506060860151915061063e6080870161050a565b90509295509295909350565b6000825161065c818460208701610666565b9190910192915050565b60005b83811015610681578181015183820152602001610669565b83811115610690576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220345085eac60cc32a54da2ea2c5c5752d85aad7a0c87334f076e59918cfdc38c464736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063aea9107814610030575b600080fd5b61004361003e366004610524565b610055565b60405190815260200160405180910390f35b600080610061836101f0565b90506001600160a01b0381166100b45760405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064015b60405180910390fd5b6000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100ef57600080fd5b505afa158015610103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012791906105fa565b505050915050600081905061013b856103b5565b156101e8576307bfa4808111156101945760405162461bcd60e51b815260206004820152601960248201527f4f7261636c653a2050726963652065786365656473206d61780000000000000060448201526064016100ab565b63042c1d808110156101e85760405162461bcd60e51b815260206004820152601760248201527f4f7261636c653a20507269636520756e646572206d696e00000000000000000060448201526064016100ab565b949350505050565b60006001600160a01b038216736b175474e89094c44da98b954eedeac495271d0f1415610232575073aed0c38402a5d19df6e4c03f4e2dced6e29c1ee9919050565b6001600160a01b03821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4814156102725750738fffffd4afb6115b954bd326cbe7b4ba576818f6919050565b6001600160a01b03821673dac17f958d2ee523a2206206994597c13d831ec714156102b25750733e7d1eab13ad0104d2750b8863b489d65364e32d919050565b6001600160a01b03821673c00e94cb662c3520282e6f5717214004a7f2688814156102f2575073dbd020caef83efd542f4de03e3cf0c28a4428bd5919050565b6001600160a01b038216737fc66500c84a76ad7e9c93437bfc5ac33e2ddae91415610332575073547a514d5e3769680ce22b2361c10ea13619e8a9919050565b6001600160a01b03821673d533a949740bb3306d119cc777fa900ba034cd521415610372575073cd627aa160a6fa45eb793d19ef54f5062f20f33f919050565b60405162461bcd60e51b81526020600482015260136024820152724173736574206e6f7420617661696c61626c6560681b60448201526064016100ab565b919050565b6000806103c18361048a565b90506000816040516020016103d6919061064a565b604051602081830303815290604052805190602001209050604051602001610407906244414960e81b815260030190565b604051602081830303815290604052805190602001208114806104515750604051635553444360e01b60208201526024016040516020818303038152906040528051906020012081145b806101e85750604051631554d11560e21b6020820152602401604051602081830303815290604052805190602001208114949350505050565b60606000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156104c757600080fd5b505afa1580156104db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610503919081019061054d565b9392505050565b805169ffffffffffffffffffff811681146103b057600080fd5b60006020828403121561053657600080fd5b81356001600160a01b038116811461050357600080fd5b60006020828403121561055f57600080fd5b815167ffffffffffffffff8082111561057757600080fd5b818401915084601f83011261058b57600080fd5b81518181111561059d5761059d610696565b604051601f8201601f19908116603f011681019083821181831017156105c5576105c5610696565b816040528281528760208487010111156105de57600080fd5b6105ef836020830160208801610666565b979650505050505050565b600080600080600060a0868803121561061257600080fd5b61061b8661050a565b945060208601519350604086015192506060860151915061063e6080870161050a565b90509295509295909350565b6000825161065c818460208701610666565b9190910192915050565b60005b83811015610681578181015183820152602001610669565b83811115610690576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220345085eac60cc32a54da2ea2c5c5752d85aad7a0c87334f076e59918cfdc38c464736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "price(address)": {
        "params": {
          "asset": "address of the asset"
        },
        "returns": {
          "_0": "uint256 USD price of 1 of the asset, in 8 decimal fixed"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "price(address)": {
        "notice": "Returns the total price in 8 digit USD for a given asset."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}