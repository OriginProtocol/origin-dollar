{
  "address": "0x72426BA137DEC62657306b12B1E869d43FeC6eC7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delay_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "CancelTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "NewDelay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "QueueTransaction",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXIMUM_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_OPERATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "pauseCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "queuedTransactions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delay_",
          "type": "uint256"
        }
      ],
      "name": "setDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingAdmin_",
          "type": "address"
        }
      ],
      "name": "setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "unpauseCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x634954c3bd981d5a5866aac169a62baccb25bb120d3bc37df4c90c5e28b00de4",
  "receipt": {
    "to": null,
    "from": "0x71F78361537A6f7B6818e7A760c8bC0146D93f50",
    "contractAddress": "0x72426BA137DEC62657306b12B1E869d43FeC6eC7",
    "transactionIndex": 129,
    "gasUsed": "2265602",
    "logsBloom": "0x
    "blockHash": "0x1d255bdd30ad0f18f3a845bf39ae081a784936adf53fa8195b84333a7eb2499d",
    "transactionHash": "0x634954c3bd981d5a5866aac169a62baccb25bb120d3bc37df4c90c5e28b00de4",
    "logs": [],
    "blockNumber": 13369248,
    "cumulativeGasUsed": "9296914",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbe2AB3d3d8F6a32b96414ebbd865dBD276d3d899",
    60
  ],
  "solcInputHash": "b6193023c3a28756304ff066bec0ae10",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"CancelTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"NewDelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"QueueTransaction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OPERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"pauseCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"queuedTransactions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"name\":\"setDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingAdmin_\",\"type\":\"address\"}],\"name\":\"setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governor.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"unpauseCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"params\":{\"proposalId\":\"id of the proposal\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"id of the proposal\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"id of the proposal\"}},\"propose(address[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Orderded list of calldata to be passed with each call\",\"description\":\"Description of the governance\",\"signatures\":\"Orderd list of function signatures to be called\",\"targets\":\"Ordered list of targeted addresses\"},\"returns\":{\"_0\":\"uint256 id of the proposal\"}},\"queue(uint256)\":{\"params\":{\"proposalId\":\"id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"id of the proposal\"},\"returns\":{\"_0\":\"ProposalState\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancel(uint256)\":{\"notice\":\"Cancel a proposal.\"},\"execute(uint256)\":{\"notice\":\"Execute a proposal.\"},\"getActions(uint256)\":{\"notice\":\"Get the actions that a proposal will take.\"},\"propose(address[],string[],bytes[],string)\":{\"notice\":\"Propose Governance call(s)\"},\"queue(uint256)\":{\"notice\":\"Queue a proposal for execution\"},\"state(uint256)\":{\"notice\":\"Get the state of a proposal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/Governor.sol\":\"Governor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\"},\"contracts/governance/Governor.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"./../timelock/Timelock.sol\\\";\\n\\n// Modeled off of Compound's Governor Alpha\\n//    https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/GovernorAlpha.sol\\ncontract Governor is Timelock {\\n    // @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        // @notice Unique id for looking up a proposal\\n        uint256 id;\\n        // @notice Creator of the proposal\\n        address proposer;\\n        // @notice The timestamp that the proposal will be available for\\n        // execution, set once the vote succeeds\\n        uint256 eta;\\n        // @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        // @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        // @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        // @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n    }\\n\\n    // @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    // @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        string description\\n    );\\n\\n    // @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    // @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    // @notice An event emitted when a proposal has been cancelled\\n    event ProposalCancelled(uint256 id);\\n\\n    uint256 public constant MAX_OPERATIONS = 32;\\n\\n    // @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    constructor(address admin_, uint256 delay_) Timelock(admin_, delay_) {}\\n\\n    /**\\n     * @notice Propose Governance call(s)\\n     * @param targets Ordered list of targeted addresses\\n     * @param signatures Orderd list of function signatures to be called\\n     * @param calldatas Orderded list of calldata to be passed with each call\\n     * @param description Description of the governance\\n     * @return uint256 id of the proposal\\n     */\\n    function propose(\\n        address[] memory targets,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        // Allow anyone to propose for now, since only admin can queue the\\n        // transaction it should be harmless, you just need to pay the gas\\n        require(\\n            targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"Governor::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"Governor::propose: must provide actions\\\");\\n        require(\\n            targets.length <= MAX_OPERATIONS,\\n            \\\"Governor::propose: too many actions\\\"\\n        );\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            signatures,\\n            calldatas,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Queue a proposal for execution\\n     * @param proposalId id of the proposal to queue\\n     */\\n    function queue(uint256 proposalId) public onlyAdmin {\\n        require(\\n            state(proposalId) == ProposalState.Pending,\\n            \\\"Governor::queue: proposal can only be queued if it is pending\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.eta = block.timestamp + delay;\\n\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalQueued(proposal.id, proposal.eta);\\n    }\\n\\n    /**\\n     * @notice Get the state of a proposal\\n     * @param proposalId id of the proposal\\n     * @return ProposalState\\n     */\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"Governor::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Pending;\\n        } else if (block.timestamp >= proposal.eta + GRACE_PERIOD) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !queuedTransactions[\\n                keccak256(abi.encode(target, signature, keccak256(data), eta))\\n            ],\\n            \\\"Governor::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        require(\\n            queuedTransactions[queueTransaction(target, signature, data, eta)],\\n            \\\"Governor::_queueOrRevert: failed to queue transaction\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Execute a proposal.\\n     * @param proposalId id of the proposal\\n     */\\n    function execute(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"Governor::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            executeTransaction(\\n                proposal.targets[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancel a proposal.\\n     * @param proposalId id of the proposal\\n     */\\n    function cancel(uint256 proposalId) public onlyAdmin {\\n        ProposalState proposalState = state(proposalId);\\n\\n        require(\\n            proposalState == ProposalState.Queued ||\\n                proposalState == ProposalState.Pending,\\n            \\\"Governor::execute: proposal can only be cancelled if it is queued or pending\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.eta = 1; // To mark the proposal as `Expired`\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            cancelTransaction(\\n                proposal.targets[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalCancelled(proposalId);\\n    }\\n\\n    /**\\n     * @notice Get the actions that a proposal will take.\\n     * @param proposalId id of the proposal\\n     */\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.signatures, p.calldatas);\\n    }\\n}\\n\",\"keccak256\":\"0xb2e8ee3b78a0d52e3199699aa8ef4e3601ec8f738f14e69bb171f949194926fe\",\"license\":\"agpl-3.0\"},\"contracts/timelock/Timelock.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title OUSD Timelock Contract\\n * @author Origin Protocol Inc\\n */\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ninterface CapitalPausable {\\n    function pauseCapital() external;\\n\\n    function unpauseCapital() external;\\n}\\n\\ncontract Timelock {\\n    using SafeMath for uint256;\\n\\n    event NewAdmin(address indexed newAdmin);\\n    event NewPendingAdmin(address indexed newPendingAdmin);\\n    event NewDelay(uint256 indexed newDelay);\\n    event CancelTransaction(\\n        bytes32 indexed txHash,\\n        address indexed target,\\n        string signature,\\n        bytes data,\\n        uint256 eta\\n    );\\n    event ExecuteTransaction(\\n        bytes32 indexed txHash,\\n        address indexed target,\\n        string signature,\\n        bytes data,\\n        uint256 eta\\n    );\\n    event QueueTransaction(\\n        bytes32 indexed txHash,\\n        address indexed target,\\n        string signature,\\n        bytes data,\\n        uint256 eta\\n    );\\n\\n    uint256 public constant GRACE_PERIOD = 3 days;\\n    uint256 public constant MINIMUM_DELAY = 1 minutes;\\n    uint256 public constant MAXIMUM_DELAY = 2 days;\\n\\n    address public admin;\\n    address public pendingAdmin;\\n    uint256 public delay;\\n\\n    mapping(bytes32 => bool) public queuedTransactions;\\n\\n    /**\\n     * @dev Throws if called by any account other than the Admin.\\n     */\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Caller is not the admin\\\");\\n        _;\\n    }\\n\\n    constructor(address admin_, uint256 delay_) {\\n        require(\\n            delay_ >= MINIMUM_DELAY,\\n            \\\"Timelock::constructor: Delay must exceed minimum delay.\\\"\\n        );\\n        require(\\n            delay_ <= MAXIMUM_DELAY,\\n            \\\"Timelock::setDelay: Delay must not exceed maximum delay.\\\"\\n        );\\n\\n        admin = admin_;\\n        delay = delay_;\\n    }\\n\\n    function setDelay(uint256 delay_) public {\\n        require(\\n            msg.sender == address(this),\\n            \\\"Timelock::setDelay: Call must come from Timelock.\\\"\\n        );\\n        require(\\n            delay_ >= MINIMUM_DELAY,\\n            \\\"Timelock::setDelay: Delay must exceed minimum delay.\\\"\\n        );\\n        require(\\n            delay_ <= MAXIMUM_DELAY,\\n            \\\"Timelock::setDelay: Delay must not exceed maximum delay.\\\"\\n        );\\n        delay = delay_;\\n\\n        emit NewDelay(delay);\\n    }\\n\\n    function acceptAdmin() public {\\n        require(\\n            msg.sender == pendingAdmin,\\n            \\\"Timelock::acceptAdmin: Call must come from pendingAdmin.\\\"\\n        );\\n        admin = msg.sender;\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(admin);\\n    }\\n\\n    function setPendingAdmin(address pendingAdmin_) public onlyAdmin {\\n        pendingAdmin = pendingAdmin_;\\n\\n        emit NewPendingAdmin(pendingAdmin);\\n    }\\n\\n    function queueTransaction(\\n        address target,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal returns (bytes32) {\\n        require(\\n            msg.sender == admin,\\n            \\\"Timelock::queueTransaction: Call must come from admin.\\\"\\n        );\\n        require(\\n            eta >= getBlockTimestamp().add(delay),\\n            \\\"Timelock::queueTransaction: Estimated execution block must satisfy delay.\\\"\\n        );\\n\\n        bytes32 txHash = keccak256(\\n            abi.encode(target, signature, keccak256(data), eta)\\n        );\\n        queuedTransactions[txHash] = true;\\n\\n        emit QueueTransaction(txHash, target, signature, data, eta);\\n        return txHash;\\n    }\\n\\n    function cancelTransaction(\\n        address target,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            msg.sender == admin,\\n            \\\"Timelock::cancelTransaction: Call must come from admin.\\\"\\n        );\\n\\n        bytes32 txHash = keccak256(\\n            abi.encode(target, signature, keccak256(data), eta)\\n        );\\n        queuedTransactions[txHash] = false;\\n\\n        emit CancelTransaction(txHash, target, signature, data, eta);\\n    }\\n\\n    function _getRevertMsg(bytes memory _returnData)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        // If the _res length is less than 68, then the transaction failed\\n        // silently (without a revert message)\\n        if (_returnData.length < 68) return \\\"Transaction reverted silently\\\";\\n\\n        assembly {\\n            // Slice the sighash.\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        return abi.decode(_returnData, (string));\\n    }\\n\\n    function executeTransaction(\\n        address target,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal returns (bytes memory) {\\n        require(\\n            msg.sender == admin,\\n            \\\"Timelock::executeTransaction: Call must come from admin.\\\"\\n        );\\n\\n        bytes32 txHash = keccak256(\\n            abi.encode(target, signature, keccak256(data), eta)\\n        );\\n        require(\\n            queuedTransactions[txHash],\\n            \\\"Timelock::executeTransaction: Transaction hasn't been queued.\\\"\\n        );\\n        require(\\n            getBlockTimestamp() >= eta,\\n            \\\"Timelock::executeTransaction: Transaction hasn't surpassed time lock.\\\"\\n        );\\n        require(\\n            getBlockTimestamp() <= eta.add(GRACE_PERIOD),\\n            \\\"Timelock::executeTransaction: Transaction is stale.\\\"\\n        );\\n\\n        queuedTransactions[txHash] = false;\\n\\n        bytes memory callData;\\n\\n        if (bytes(signature).length == 0) {\\n            callData = data;\\n        } else {\\n            callData = abi.encodePacked(\\n                bytes4(keccak256(bytes(signature))),\\n                data\\n            );\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(callData);\\n\\n        if (!success) {\\n            revert(_getRevertMsg(returnData));\\n        }\\n\\n        emit ExecuteTransaction(txHash, target, signature, data, eta);\\n\\n        return returnData;\\n    }\\n\\n    function getBlockTimestamp() internal view returns (uint256) {\\n        // solium-disable-next-line security/no-block-members\\n        return block.timestamp;\\n    }\\n\\n    function pauseCapital(address target) external {\\n        require(\\n            msg.sender == admin,\\n            \\\"Timelock::pauseCapital: Call must come from admin.\\\"\\n        );\\n        CapitalPausable(target).pauseCapital();\\n    }\\n\\n    function unpauseCapital(address target) external {\\n        require(\\n            msg.sender == admin,\\n            \\\"Timelock::unpauseCapital: Call must come from admin.\\\"\\n        );\\n        CapitalPausable(target).unpauseCapital();\\n    }\\n}\\n\",\"keccak256\":\"0x2a808ab6a0adda7fd05b55fb89f66bea83c22c353ecf2e0ab95cebe544bd1aa9\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80636a42b8f8116100b8578063da35c6641161007c578063da35c664146102be578063ddf0b009146102c7578063e177246e146102da578063f2b06537146102ed578063f851a44014610320578063fe0d94c11461033357600080fd5b80636a42b8f8146102865780637d645fab1461028f5780638a0eb00214610299578063b1b43ae5146102ac578063c1a287e2146102b457600080fd5b8063328dd982116100ff578063328dd982146102165780633e4f49e61461023857806340e58ee5146102585780634dd18bf51461026b5780635dc2803a1461027e57600080fd5b8063013cf08b1461013c5780630e18b681146101ad5780630e4d4731146101b757806311e91b9a146101ca57806326782247146101eb575b600080fd5b61017e61014a366004612246565b600560205260009081526040902080546001820154600283015460069093015491926001600160a01b039091169160ff1684565b604080519485526001600160a01b03909316602085015291830152151560608201526080015b60405180910390f35b6101b5610346565b005b6101b56101c536600461211b565b610414565b6101dd6101d8366004612136565b6104df565b6040519081526020016101a4565b6001546101fe906001600160a01b031681565b6040516001600160a01b0390911681526020016101a4565b610229610224366004612246565b610763565b6040516101a49392919061241f565b61024b610246366004612246565b610991565b6040516101a49190612462565b6101b5610266366004612246565b610a64565b6101b561027936600461211b565b610d4c565b6101dd602081565b6101dd60025481565b6101dd6202a30081565b6101b56102a736600461211b565b610dc0565b6101dd603c81565b6101dd6203f48081565b6101dd60045481565b6101b56102d5366004612246565b610e72565b6101b56102e8366004612246565b611142565b6103106102fb366004612246565b60036020526000908152604090205460ff1681565b60405190151581526020016101a4565b6000546101fe906001600160a01b031681565b6101b5610341366004612246565b6112c5565b6001546001600160a01b031633146103cb5760405162461bcd60e51b815260206004820152603860248201527f54696d656c6f636b3a3a61636365707441646d696e3a2043616c6c206d75737460448201527f20636f6d652066726f6d2070656e64696e6741646d696e2e000000000000000060648201526084015b60405180910390fd5b60008054336001600160a01b0319918216811783556001805490921690915560405190917f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c91a2565b6000546001600160a01b031633146104895760405162461bcd60e51b815260206004820152603260248201527f54696d656c6f636b3a3a70617573654361706974616c3a2043616c6c206d75736044820152713a1031b7b6b290333937b69030b236b4b71760711b60648201526084016103c2565b806001600160a01b0316633dbc911f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b5050505050565b6000835185511480156104f3575082518551145b6105655760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f723a3a70726f706f73653a2070726f706f73616c2066756e6360448201527f74696f6e20696e666f726d6174696f6e206172697479206d69736d617463680060648201526084016103c2565b84516105c35760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f723a3a70726f706f73653a206d7573742070726f7669646520604482015266616374696f6e7360c81b60648201526084016103c2565b6020855111156106215760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a3a70726f706f73653a20746f6f206d616e7920616374696044820152626f6e7360e81b60648201526084016103c2565b6004805490600061063183612671565b90915550506040805160e0810182526004548082523360208084019182526000848601818152606086018c8152608087018c905260a087018b905260c08701839052948252600583529590208451815591516001830180546001600160a01b0319166001600160a01b039092169190911790559351600282015590518051929384936106c39260038501920190611d53565b50608082015180516106df916004840191602090910190611db8565b5060a082015180516106fb916005840191602090910190611e11565b5060c091909101516006909101805460ff191691151591909117905580516040517f036740d31eab74831d37194083f56e074e66a07d398ba4077b8641a7e9ac7ffe916107519133908a908a908a908a9061250a565b60405180910390a15195945050505050565b600081815260056020818152604092839020600381018054855181850281018501909652808652606095869586956004860193918601929185918301828280156107d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107b8575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156108aa57838290600052602060002001805461081d9061263c565b80601f01602080910402602001604051908101604052809291908181526020018280546108499061263c565b80156108965780601f1061086b57610100808354040283529160200191610896565b820191906000526020600020905b81548152906001019060200180831161087957829003601f168201915b5050505050815260200190600101906107fe565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561097d5783829060005260206000200180546108f09061263c565b80601f016020809104026020016040519081016040528092919081815260200182805461091c9061263c565b80156109695780601f1061093e57610100808354040283529160200191610969565b820191906000526020600020905b81548152906001019060200180831161094c57829003601f168201915b5050505050815260200190600101906108d1565b505050509050935093509350509193909250565b600081600454101580156109a55750600082115b6109fd5760405162461bcd60e51b8152602060048201526024808201527f476f7665726e6f723a3a73746174653a20696e76616c69642070726f706f73616044820152631b081a5960e21b60648201526084016103c2565b6000828152600560205260409020600681015460ff1615610a215750600392915050565b6002810154610a335750600092915050565b6203f4808160020154610a4691906125f8565b4210610a555750600292915050565b50600192915050565b50919050565b6000546001600160a01b03163314610a8e5760405162461bcd60e51b81526004016103c2906124d3565b6000610a9982610991565b90506001816003811115610aaf57610aaf6126a2565b1480610acc57506000816003811115610aca57610aca6126a2565b145b610b535760405162461bcd60e51b815260206004820152604c60248201527f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e2060448201527f6f6e6c792062652063616e63656c6c656420696620697420697320717565756560648201526b64206f722070656e64696e6760a01b608482015260a4016103c2565b600082815260056020526040812060016002820155905b6003820154811015610d1357610d01826003018281548110610b8e57610b8e6126b8565b6000918252602090912001546004840180546001600160a01b039092169184908110610bbc57610bbc6126b8565b906000526020600020018054610bd19061263c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfd9061263c565b8015610c4a5780601f10610c1f57610100808354040283529160200191610c4a565b820191906000526020600020905b815481529060010190602001808311610c2d57829003601f168201915b5050505050846005018481548110610c6457610c646126b8565b906000526020600020018054610c799061263c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca59061263c565b8015610cf25780601f10610cc757610100808354040283529160200191610cf2565b820191906000526020600020905b815481529060010190602001808311610cd557829003601f168201915b50505050508560020154611550565b80610d0b81612671565b915050610b6a565b506040518381527f416e669c63d9a3a5e36ee7cc7e2104b8db28ccd286aa18966e98fa230c73b08c9060200160405180910390a1505050565b6000546001600160a01b03163314610d765760405162461bcd60e51b81526004016103c2906124d3565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f69d78e38a01985fbb1462961809b4b2d65531bc93b2b94037f3334b82ca4a75690600090a250565b6000546001600160a01b03163314610e375760405162461bcd60e51b815260206004820152603460248201527f54696d656c6f636b3a3a756e70617573654361706974616c3a2043616c6c206d6044820152733ab9ba1031b7b6b290333937b69030b236b4b71760611b60648201526084016103c2565b806001600160a01b03166394828ffd6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104c457600080fd5b6000546001600160a01b03163314610e9c5760405162461bcd60e51b81526004016103c2906124d3565b6000610ea782610991565b6003811115610eb857610eb86126a2565b14610f2b5760405162461bcd60e51b815260206004820152603d60248201527f476f7665726e6f723a3a71756575653a2070726f706f73616c2063616e206f6e60448201527f6c79206265207175657565642069662069742069732070656e64696e6700000060648201526084016103c2565b6000818152600560205260409020600254610f4690426125f8565b600282015560005b60038201548110156110f7576110e5826003018281548110610f7257610f726126b8565b6000918252602090912001546004840180546001600160a01b039092169184908110610fa057610fa06126b8565b906000526020600020018054610fb59061263c565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe19061263c565b801561102e5780601f106110035761010080835404028352916020019161102e565b820191906000526020600020905b81548152906001019060200180831161101157829003601f168201915b5050505050846005018481548110611048576110486126b8565b90600052602060002001805461105d9061263c565b80601f01602080910402602001604051908101604052809291908181526020018280546110899061263c565b80156110d65780601f106110ab576101008083540402835291602001916110d6565b820191906000526020600020905b8154815290600101906020018083116110b957829003601f168201915b5050505050856002015461166c565b806110ef81612671565b915050610f4e565b50805460028201546040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda28929261113692908252602082015260400190565b60405180910390a15050565b3330146111ab5760405162461bcd60e51b815260206004820152603160248201527f54696d656c6f636b3a3a73657444656c61793a2043616c6c206d75737420636f60448201527036b290333937b6902a34b6b2b637b1b59760791b60648201526084016103c2565b603c8110156112195760405162461bcd60e51b815260206004820152603460248201527f54696d656c6f636b3a3a73657444656c61793a2044656c6179206d75737420656044820152733c31b2b2b21036b4b734b6bab6903232b630bc9760611b60648201526084016103c2565b6202a3008111156112925760405162461bcd60e51b815260206004820152603860248201527f54696d656c6f636b3a3a73657444656c61793a2044656c6179206d757374206e60448201527f6f7420657863656564206d6178696d756d2064656c61792e000000000000000060648201526084016103c2565b600281905560405181907f948b1f6a42ee138b7e34058ba85a37f716d55ff25ff05a763f15bed6a04c8d2c90600090a250565b60016112d082610991565b60038111156112e1576112e16126a2565b14611356576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e2060448201527f6f6e6c792062652065786563757465642069662069742069732071756575656460648201526084016103c2565b600081815260056020526040812060068101805460ff19166001179055905b600382015481101561151f5761150c826003018281548110611399576113996126b8565b6000918252602090912001546004840180546001600160a01b0390921691849081106113c7576113c76126b8565b9060005260206000200180546113dc9061263c565b80601f01602080910402602001604051908101604052809291908181526020018280546114089061263c565b80156114555780601f1061142a57610100808354040283529160200191611455565b820191906000526020600020905b81548152906001019060200180831161143857829003601f168201915b505050505084600501848154811061146f5761146f6126b8565b9060005260206000200180546114849061263c565b80601f01602080910402602001604051908101604052809291908181526020018280546114b09061263c565b80156114fd5780601f106114d2576101008083540402835291602001916114fd565b820191906000526020600020905b8154815290600101906020018083116114e057829003601f168201915b505050505085600201546117be565b508061151781612671565b915050611375565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90602001611136565b6000546001600160a01b031633146115d05760405162461bcd60e51b815260206004820152603760248201527f54696d656c6f636b3a3a63616e63656c5472616e73616374696f6e3a2043616c60448201527f6c206d75737420636f6d652066726f6d2061646d696e2e00000000000000000060648201526084016103c2565b600084848480519060200120846040516020016115f094939291906123e8565b60408051601f19818403018152828252805160209182012060008181526003909252919020805460ff1916905591506001600160a01b0386169082907f39805be0099a319b88cf17675318997e223b45eef7836c0bdfa20b4009e67cc69061165d9088908890889061249d565b60405180910390a35050505050565b60036000858585805190602001208560405160200161168e94939291906123e8565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561172a5760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f723a3a5f71756575654f725265766572743a2070726f706f7360448201527f616c20616374696f6e20616c726561647920717565756564206174206574610060648201526084016103c2565b6003600061173a86868686611b27565b815260208101919091526040016000205460ff166117b85760405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f723a3a5f71756575654f725265766572743a206661696c6564604482015274103a379038bab2bab2903a3930b739b0b1ba34b7b760591b60648201526084016103c2565b50505050565b6000546060906001600160a01b031633146118415760405162461bcd60e51b815260206004820152603860248201527f54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a20436160448201527f6c6c206d75737420636f6d652066726f6d2061646d696e2e000000000000000060648201526084016103c2565b6000858585805190602001208560405160200161186194939291906123e8565b60408051601f1981840301815291815281516020928301206000818152600390935291205490915060ff166118fe5760405162461bcd60e51b815260206004820152603d60248201527f54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a20547260448201527f616e73616374696f6e206861736e2774206265656e207175657565642e00000060648201526084016103c2565b824210156119825760405162461bcd60e51b815260206004820152604560248201527f54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a20547260448201527f616e73616374696f6e206861736e2774207375727061737365642074696d65206064820152643637b1b59760d91b608482015260a4016103c2565b61198f836203f480611cdb565b4211156119fa5760405162461bcd60e51b815260206004820152603360248201527f54696d656c6f636b3a3a657865637574655472616e73616374696f6e3a20547260448201527230b739b0b1ba34b7b71034b99039ba30b6329760691b60648201526084016103c2565b6000818152600360205260409020805460ff191690558451606090611a20575083611a4c565b858051906020012085604051602001611a3a92919061239b565b60405160208183030381529060405290505b600080886001600160a01b031683604051611a6791906123cc565b6000604051808303816000865af19150503d8060008114611aa4576040519150601f19603f3d011682016040523d82523d6000602084013e611aa9565b606091505b509150915081611ad557611abc81611cee565b60405162461bcd60e51b81526004016103c2919061248a565b886001600160a01b0316847f73bcadb73827ad9a900198359278e77086ae03e9e17ef173ad7de9e7e39acaff8a8a8a604051611b139392919061249d565b60405180910390a398975050505050505050565b600080546001600160a01b03163314611ba15760405162461bcd60e51b815260206004820152603660248201527f54696d656c6f636b3a3a71756575655472616e73616374696f6e3a2043616c6c6044820152751036bab9ba1031b7b6b290333937b69030b236b4b71760511b60648201526084016103c2565b611bb4600254611bae4290565b90611cdb565b821015611c3b5760405162461bcd60e51b815260206004820152604960248201527f54696d656c6f636b3a3a71756575655472616e73616374696f6e3a204573746960448201527f6d6174656420657865637574696f6e20626c6f636b206d757374207361746973606482015268333c903232b630bc9760b91b608482015260a4016103c2565b60008585858051906020012085604051602001611c5b94939291906123e8565b60408051601f19818403018152828252805160209182012060008181526003909252919020805460ff1916600117905591506001600160a01b0387169082907ed038d9209423c0ba06a7d606d7a0eeafe97cb5bdb3a9dd5b35c019b0966a9590611cca9089908990899061249d565b60405180910390a395945050505050565b6000611ce782846125f8565b9392505050565b6060604482511015611d3357505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60048201915081806020019051810190611d4d919061225f565b92915050565b828054828255906000526020600020908101928215611da8579160200282015b82811115611da857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611d73565b50611db4929150611e6a565b5090565b828054828255906000526020600020908101928215611e05579160200282015b82811115611e055782518051611df5918491602090910190611e7f565b5091602001919060010190611dd8565b50611db4929150611ef3565b828054828255906000526020600020908101928215611e5e579160200282015b82811115611e5e5782518051611e4e918491602090910190611e7f565b5091602001919060010190611e31565b50611db4929150611f10565b5b80821115611db45760008155600101611e6b565b828054611e8b9061263c565b90600052602060002090601f016020900481019282611ead5760008555611da8565b82601f10611ec657805160ff1916838001178555611da8565b82800160010185558215611da8579182015b82811115611da8578251825591602001919060010190611ed8565b80821115611db4576000611f078282611f2d565b50600101611ef3565b80821115611db4576000611f248282611f2d565b50600101611f10565b508054611f399061263c565b6000825580601f10611f49575050565b601f016020900490600052602060002090810190611f679190611e6a565b50565b6000611f7d611f78846125d0565b61257b565b9050828152838383011115611f9157600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611fbf57600080fd5b919050565b600082601f830112611fd557600080fd5b81356020611fe5611f78836125ac565b80838252828201915082860187848660051b890101111561200557600080fd5b60005b8581101561205c57813567ffffffffffffffff81111561202757600080fd5b8801603f81018a1361203857600080fd5b6120498a8783013560408401611f6a565b8552509284019290840190600101612008565b5090979650505050505050565b600082601f83011261207a57600080fd5b8135602061208a611f78836125ac565b80838252828201915082860187848660051b89010111156120aa57600080fd5b6000805b868110156120ed57823567ffffffffffffffff8111156120cc578283fd5b6120da8b88838d01016120fb565b86525093850193918501916001016120ae565b509198975050505050505050565b600082601f83011261210c57600080fd5b611ce783833560208501611f6a565b60006020828403121561212d57600080fd5b611ce782611fa8565b6000806000806080858703121561214c57600080fd5b843567ffffffffffffffff8082111561216457600080fd5b818701915087601f83011261217857600080fd5b81356020612188611f78836125ac565b8083825282820191508286018c848660051b89010111156121a857600080fd5b600096505b848710156121d2576121be81611fa8565b8352600196909601959183019183016121ad565b50985050880135925050808211156121e957600080fd5b6121f588838901612069565b9450604087013591508082111561220b57600080fd5b61221788838901611fc4565b9350606087013591508082111561222d57600080fd5b5061223a878288016120fb565b91505092959194509250565b60006020828403121561225857600080fd5b5035919050565b60006020828403121561227157600080fd5b815167ffffffffffffffff81111561228857600080fd5b8201601f8101841361229957600080fd5b80516122a7611f78826125d0565b8181528560208385010111156122bc57600080fd5b6122cd826020830160208601612610565b95945050505050565b600081518084526020808501945080840160005b8381101561230f5781516001600160a01b0316875295820195908201906001016122ea565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561236257828403895261235084835161236f565b98850198935090840190600101612338565b5091979650505050505050565b60008151808452612387816020860160208601612610565b601f01601f19169290920160200192915050565b6001600160e01b03198316815281516000906123be816004850160208701612610565b919091016004019392505050565b600082516123de818460208701612610565b9190910192915050565b6001600160a01b038516815260806020820181905260009061240c9083018661236f565b6040830194909452506060015292915050565b60608152600061243260608301866122d6565b8281036020840152612444818661231a565b90508281036040840152612458818561231a565b9695505050505050565b602081016004831061248457634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000611ce7602083018461236f565b6060815260006124b0606083018661236f565b82810360208401526124c2818661236f565b915050826040830152949350505050565b60208082526017908201527f43616c6c6572206973206e6f74207468652061646d696e000000000000000000604082015260600190565b8681526001600160a01b038616602082015260c060408201819052600090612534908301876122d6565b8281036060840152612546818761231a565b9050828103608084015261255a818661231a565b905082810360a084015261256e818561236f565b9998505050505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156125a4576125a46126ce565b604052919050565b600067ffffffffffffffff8211156125c6576125c66126ce565b5060051b60200190565b600067ffffffffffffffff8211156125ea576125ea6126ce565b50601f01601f191660200190565b6000821982111561260b5761260b61268c565b500190565b60005b8381101561262b578181015183820152602001612613565b838111156117b85750506000910152565b600181811c9082168061265057607f821691505b60208210811415610a5e57634e487b7160e01b600052602260045260246000fd5b60006000198214156126855761268561268c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220452b83c2093db35c881e44cd69eccbf64c653e3fb924b83c013fbbb14f25bb3b64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancel(uint256)": {
        "params": {
          "proposalId": "id of the proposal"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "id of the proposal"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "id of the proposal"
        }
      },
      "propose(address[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Orderded list of calldata to be passed with each call",
          "description": "Description of the governance",
          "signatures": "Orderd list of function signatures to be called",
          "targets": "Ordered list of targeted addresses"
        },
        "returns": {
          "_0": "uint256 id of the proposal"
        }
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "id of the proposal"
        },
        "returns": {
          "_0": "ProposalState"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancel(uint256)": {
        "notice": "Cancel a proposal."
      },
      "execute(uint256)": {
        "notice": "Execute a proposal."
      },
      "getActions(uint256)": {
        "notice": "Get the actions that a proposal will take."
      },
      "propose(address[],string[],bytes[],string)": {
        "notice": "Propose Governance call(s)"
      },
      "queue(uint256)": {
        "notice": "Queue a proposal for execution"
      },
      "state(uint256)": {
        "notice": "Get the state of a proposal"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15215,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15217,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15219,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "delay",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 15223,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "queuedTransactions",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 3574,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "proposalCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3597,
        "contract": "contracts/governance/Governor.sol:Governor",
        "label": "proposals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Proposal)3592_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)3592_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Governor.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)3592_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)3592_storage": {
        "encoding": "inplace",
        "label": "struct Governor.Proposal",
        "members": [
          {
            "astId": 3576,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3578,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3580,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3583,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 3586,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "signatures",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 3589,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "calldatas",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 3591,
            "contract": "contracts/governance/Governor.sol:Governor",
            "label": "executed",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}